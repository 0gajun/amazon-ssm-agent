// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package ssmmds_test

import (
	"bytes"
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/ssmmds"
)

var _ time.Duration
var _ bytes.Buffer

func ExampleSSMMDS_AcknowledgeMessage() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.AcknowledgeMessageInput{
		MessageId: aws.String("MessageId"), // Required
	}
	resp, err := svc.AcknowledgeMessage(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func ExampleSSMMDS_DeleteMessage() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.DeleteMessageInput{
		MessageId: aws.String("MessageId"), // Required
	}
	resp, err := svc.DeleteMessage(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func ExampleSSMMDS_FailMessage() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.FailMessageInput{
		FailureType: aws.String("FailureType"), // Required
		MessageId:   aws.String("MessageId"),   // Required
	}
	resp, err := svc.FailMessage(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func ExampleSSMMDS_GetEndpoint() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.GetEndpointInput{
		Destination: aws.String("Destination"), // Required
	}
	resp, err := svc.GetEndpoint(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func ExampleSSMMDS_GetMessages() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.GetMessagesInput{
		Destination:                aws.String("Destination"),       // Required
		MessagesRequestId:          aws.String("MessagesRequestId"), // Required
		NextToken:                  aws.String("NextToken"),
		VisibilityTimeoutInSeconds: aws.Int64(1),
	}
	resp, err := svc.GetMessages(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}

func ExampleSSMMDS_SendReply() {
	svc := ssmmds.New(session.New())

	params := &ssmmds.SendReplyInput{
		MessageId: aws.String("MessageId"), // Required
		Payload:   aws.String("Payload"),   // Required
		ReplyId:   aws.String("ReplyId"),   // Required
		DeliveryOptions: &ssmmds.DeliveryOptions{
			ExpiresAfter:   aws.String("ExpiresAfter"),
			ReplacementKey: aws.String("ReplacementKey"),
			SchedulePush:   aws.String("SchedulePush"),
		},
	}
	resp, err := svc.SendReply(params)

	if err != nil {
		// Print the error, cast err to awserr.Error to get the Code and
		// Message from an error.
		fmt.Println(err.Error())
		return
	}

	// Pretty-print the response data.
	fmt.Println(resp)
}
