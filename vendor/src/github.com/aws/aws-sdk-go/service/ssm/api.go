// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package ssm provides a client for Amazon Simple Systems Management Service.
package ssm

import (
	"time"

	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
)

const opAddTagsToResource = "AddTagsToResource"

// AddTagsToResourceRequest generates a request for the AddTagsToResource operation.
func (c *SSM) AddTagsToResourceRequest(input *AddTagsToResourceInput) (req *request.Request, output *AddTagsToResourceOutput) {
	op := &request.Operation{
		Name:       opAddTagsToResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddTagsToResourceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &AddTagsToResourceOutput{}
	req.Data = output
	return
}

func (c *SSM) AddTagsToResource(input *AddTagsToResourceInput) (*AddTagsToResourceOutput, error) {
	req, out := c.AddTagsToResourceRequest(input)
	err := req.Send()
	return out, err
}

const opApplyAssociations = "ApplyAssociations"

// ApplyAssociationsRequest generates a request for the ApplyAssociations operation.
func (c *SSM) ApplyAssociationsRequest(input *ApplyAssociationsInput) (req *request.Request, output *ApplyAssociationsOutput) {
	op := &request.Operation{
		Name:       opApplyAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ApplyAssociationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ApplyAssociationsOutput{}
	req.Data = output
	return
}

func (c *SSM) ApplyAssociations(input *ApplyAssociationsInput) (*ApplyAssociationsOutput, error) {
	req, out := c.ApplyAssociationsRequest(input)
	err := req.Send()
	return out, err
}

const opCancelCommand = "CancelCommand"

// CancelCommandRequest generates a request for the CancelCommand operation.
func (c *SSM) CancelCommandRequest(input *CancelCommandInput) (req *request.Request, output *CancelCommandOutput) {
	op := &request.Operation{
		Name:       opCancelCommand,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CancelCommandInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CancelCommandOutput{}
	req.Data = output
	return
}

// Attempts to cancel the command specified by the Command ID. There is no guarantee
// that the command will be terminated and the underlying process stopped.
func (c *SSM) CancelCommand(input *CancelCommandInput) (*CancelCommandOutput, error) {
	req, out := c.CancelCommandRequest(input)
	err := req.Send()
	return out, err
}

const opCreateActivation = "CreateActivation"

// CreateActivationRequest generates a request for the CreateActivation operation.
func (c *SSM) CreateActivationRequest(input *CreateActivationInput) (req *request.Request, output *CreateActivationOutput) {
	op := &request.Operation{
		Name:       opCreateActivation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateActivationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateActivationOutput{}
	req.Data = output
	return
}

func (c *SSM) CreateActivation(input *CreateActivationInput) (*CreateActivationOutput, error) {
	req, out := c.CreateActivationRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAssociation = "CreateAssociation"

// CreateAssociationRequest generates a request for the CreateAssociation operation.
func (c *SSM) CreateAssociationRequest(input *CreateAssociationInput) (req *request.Request, output *CreateAssociationOutput) {
	op := &request.Operation{
		Name:       opCreateAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssociationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAssociationOutput{}
	req.Data = output
	return
}

// Associates the specified SSM document with the specified instance.
//
// When you associate an SSM document with an instance, the configuration agent
// on the instance processes the document and configures the instance as specified.
//
// If you associate a document with an instance that already has an associated
// document, the system throws the AssociationAlreadyExists exception.
func (c *SSM) CreateAssociation(input *CreateAssociationInput) (*CreateAssociationOutput, error) {
	req, out := c.CreateAssociationRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAssociationBatch = "CreateAssociationBatch"

// CreateAssociationBatchRequest generates a request for the CreateAssociationBatch operation.
func (c *SSM) CreateAssociationBatchRequest(input *CreateAssociationBatchInput) (req *request.Request, output *CreateAssociationBatchOutput) {
	op := &request.Operation{
		Name:       opCreateAssociationBatch,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssociationBatchInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAssociationBatchOutput{}
	req.Data = output
	return
}

// Associates the specified SSM document with the specified instances.
//
// When you associate an SSM document with an instance, the configuration agent
// on the instance processes the document and configures the instance as specified.
//
// If you associate a document with an instance that already has an associated
// document, the system throws the AssociationAlreadyExists exception.
func (c *SSM) CreateAssociationBatch(input *CreateAssociationBatchInput) (*CreateAssociationBatchOutput, error) {
	req, out := c.CreateAssociationBatchRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAutomationDefinitionVersion = "CreateAutomationDefinitionVersion"

// CreateAutomationDefinitionVersionRequest generates a request for the CreateAutomationDefinitionVersion operation.
func (c *SSM) CreateAutomationDefinitionVersionRequest(input *CreateAutomationDefinitionVersionInput) (req *request.Request, output *CreateAutomationDefinitionVersionResult) {
	op := &request.Operation{
		Name:       opCreateAutomationDefinitionVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAutomationDefinitionVersionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAutomationDefinitionVersionResult{}
	req.Data = output
	return
}

func (c *SSM) CreateAutomationDefinitionVersion(input *CreateAutomationDefinitionVersionInput) (*CreateAutomationDefinitionVersionResult, error) {
	req, out := c.CreateAutomationDefinitionVersionRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAutomationDefinitionVersionStrict = "CreateAutomationDefinitionVersionStrict"

// CreateAutomationDefinitionVersionStrictRequest generates a request for the CreateAutomationDefinitionVersionStrict operation.
func (c *SSM) CreateAutomationDefinitionVersionStrictRequest(input *CreateAutomationDefinitionVersionStrictInput) (req *request.Request, output *CreateAutomationDefinitionVersionResult) {
	op := &request.Operation{
		Name:       opCreateAutomationDefinitionVersionStrict,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAutomationDefinitionVersionStrictInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAutomationDefinitionVersionResult{}
	req.Data = output
	return
}

func (c *SSM) CreateAutomationDefinitionVersionStrict(input *CreateAutomationDefinitionVersionStrictInput) (*CreateAutomationDefinitionVersionResult, error) {
	req, out := c.CreateAutomationDefinitionVersionStrictRequest(input)
	err := req.Send()
	return out, err
}

const opCreateDocument = "CreateDocument"

// CreateDocumentRequest generates a request for the CreateDocument operation.
func (c *SSM) CreateDocumentRequest(input *CreateDocumentInput) (req *request.Request, output *CreateDocumentOutput) {
	op := &request.Operation{
		Name:       opCreateDocument,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDocumentInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateDocumentOutput{}
	req.Data = output
	return
}

// Creates an SSM document.
//
// After you create an SSM document, you can use CreateAssociation to associate
// it with one or more running instances.
func (c *SSM) CreateDocument(input *CreateDocumentInput) (*CreateDocumentOutput, error) {
	req, out := c.CreateDocumentRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteActivation = "DeleteActivation"

// DeleteActivationRequest generates a request for the DeleteActivation operation.
func (c *SSM) DeleteActivationRequest(input *DeleteActivationInput) (req *request.Request, output *DeleteActivationOutput) {
	op := &request.Operation{
		Name:       opDeleteActivation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteActivationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DeleteActivationOutput{}
	req.Data = output
	return
}

func (c *SSM) DeleteActivation(input *DeleteActivationInput) (*DeleteActivationOutput, error) {
	req, out := c.DeleteActivationRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteAssociation = "DeleteAssociation"

// DeleteAssociationRequest generates a request for the DeleteAssociation operation.
func (c *SSM) DeleteAssociationRequest(input *DeleteAssociationInput) (req *request.Request, output *DeleteAssociationOutput) {
	op := &request.Operation{
		Name:       opDeleteAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssociationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DeleteAssociationOutput{}
	req.Data = output
	return
}

// Disassociates the specified SSM document from the specified instance.
//
// When you disassociate an SSM document from an instance, it does not change
// the configuration of the instance. To change the configuration state of an
// instance after you disassociate a document, you must create a new document
// with the desired configuration and associate it with the instance.
func (c *SSM) DeleteAssociation(input *DeleteAssociationInput) (*DeleteAssociationOutput, error) {
	req, out := c.DeleteAssociationRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteAutomationDefinition = "DeleteAutomationDefinition"

// DeleteAutomationDefinitionRequest generates a request for the DeleteAutomationDefinition operation.
func (c *SSM) DeleteAutomationDefinitionRequest(input *DeleteAutomationDefinitionInput) (req *request.Request, output *DeleteAutomationDefinitionOutput) {
	op := &request.Operation{
		Name:       opDeleteAutomationDefinition,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAutomationDefinitionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DeleteAutomationDefinitionOutput{}
	req.Data = output
	return
}

func (c *SSM) DeleteAutomationDefinition(input *DeleteAutomationDefinitionInput) (*DeleteAutomationDefinitionOutput, error) {
	req, out := c.DeleteAutomationDefinitionRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteDocument = "DeleteDocument"

// DeleteDocumentRequest generates a request for the DeleteDocument operation.
func (c *SSM) DeleteDocumentRequest(input *DeleteDocumentInput) (req *request.Request, output *DeleteDocumentOutput) {
	op := &request.Operation{
		Name:       opDeleteDocument,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDocumentInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DeleteDocumentOutput{}
	req.Data = output
	return
}

// Deletes the SSM document and all instance associations to the document.
//
// Before you delete the SSM document, we recommend that you use DeleteAssociation
// to disassociate all instances that are associated with the document.
func (c *SSM) DeleteDocument(input *DeleteDocumentInput) (*DeleteDocumentOutput, error) {
	req, out := c.DeleteDocumentRequest(input)
	err := req.Send()
	return out, err
}

const opDeregisterManagedInstance = "DeregisterManagedInstance"

// DeregisterManagedInstanceRequest generates a request for the DeregisterManagedInstance operation.
func (c *SSM) DeregisterManagedInstanceRequest(input *DeregisterManagedInstanceInput) (req *request.Request, output *DeregisterManagedInstanceOutput) {
	op := &request.Operation{
		Name:       opDeregisterManagedInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeregisterManagedInstanceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DeregisterManagedInstanceOutput{}
	req.Data = output
	return
}

func (c *SSM) DeregisterManagedInstance(input *DeregisterManagedInstanceInput) (*DeregisterManagedInstanceOutput, error) {
	req, out := c.DeregisterManagedInstanceRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeActivations = "DescribeActivations"

// DescribeActivationsRequest generates a request for the DescribeActivations operation.
func (c *SSM) DescribeActivationsRequest(input *DescribeActivationsInput) (req *request.Request, output *DescribeActivationsOutput) {
	op := &request.Operation{
		Name:       opDescribeActivations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeActivationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeActivationsOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeActivations(input *DescribeActivationsInput) (*DescribeActivationsOutput, error) {
	req, out := c.DescribeActivationsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAssociation = "DescribeAssociation"

// DescribeAssociationRequest generates a request for the DescribeAssociation operation.
func (c *SSM) DescribeAssociationRequest(input *DescribeAssociationInput) (req *request.Request, output *DescribeAssociationOutput) {
	op := &request.Operation{
		Name:       opDescribeAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssociationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAssociationOutput{}
	req.Data = output
	return
}

// Describes the associations for the specified SSM document or instance.
func (c *SSM) DescribeAssociation(input *DescribeAssociationInput) (*DescribeAssociationOutput, error) {
	req, out := c.DescribeAssociationRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAutomationActivityTypes = "DescribeAutomationActivityTypes"

// DescribeAutomationActivityTypesRequest generates a request for the DescribeAutomationActivityTypes operation.
func (c *SSM) DescribeAutomationActivityTypesRequest(input *DescribeAutomationActivityTypesInput) (req *request.Request, output *DescribeAutomationActivityTypesOutput) {
	op := &request.Operation{
		Name:       opDescribeAutomationActivityTypes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAutomationActivityTypesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAutomationActivityTypesOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeAutomationActivityTypes(input *DescribeAutomationActivityTypesInput) (*DescribeAutomationActivityTypesOutput, error) {
	req, out := c.DescribeAutomationActivityTypesRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAutomationDefinitionVersions = "DescribeAutomationDefinitionVersions"

// DescribeAutomationDefinitionVersionsRequest generates a request for the DescribeAutomationDefinitionVersions operation.
func (c *SSM) DescribeAutomationDefinitionVersionsRequest(input *DescribeAutomationDefinitionVersionsInput) (req *request.Request, output *DescribeAutomationDefinitionVersionsOutput) {
	op := &request.Operation{
		Name:       opDescribeAutomationDefinitionVersions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAutomationDefinitionVersionsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAutomationDefinitionVersionsOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeAutomationDefinitionVersions(input *DescribeAutomationDefinitionVersionsInput) (*DescribeAutomationDefinitionVersionsOutput, error) {
	req, out := c.DescribeAutomationDefinitionVersionsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAutomationDefinitions = "DescribeAutomationDefinitions"

// DescribeAutomationDefinitionsRequest generates a request for the DescribeAutomationDefinitions operation.
func (c *SSM) DescribeAutomationDefinitionsRequest(input *DescribeAutomationDefinitionsInput) (req *request.Request, output *DescribeAutomationDefinitionsOutput) {
	op := &request.Operation{
		Name:       opDescribeAutomationDefinitions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAutomationDefinitionsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAutomationDefinitionsOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeAutomationDefinitions(input *DescribeAutomationDefinitionsInput) (*DescribeAutomationDefinitionsOutput, error) {
	req, out := c.DescribeAutomationDefinitionsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAutomationExecutions = "DescribeAutomationExecutions"

// DescribeAutomationExecutionsRequest generates a request for the DescribeAutomationExecutions operation.
func (c *SSM) DescribeAutomationExecutionsRequest(input *DescribeAutomationExecutionsInput) (req *request.Request, output *DescribeAutomationExecutionsOutput) {
	op := &request.Operation{
		Name:       opDescribeAutomationExecutions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAutomationExecutionsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAutomationExecutionsOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeAutomationExecutions(input *DescribeAutomationExecutionsInput) (*DescribeAutomationExecutionsOutput, error) {
	req, out := c.DescribeAutomationExecutionsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeDocument = "DescribeDocument"

// DescribeDocumentRequest generates a request for the DescribeDocument operation.
func (c *SSM) DescribeDocumentRequest(input *DescribeDocumentInput) (req *request.Request, output *DescribeDocumentOutput) {
	op := &request.Operation{
		Name:       opDescribeDocument,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDocumentInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeDocumentOutput{}
	req.Data = output
	return
}

// Describes the specified SSM document.
func (c *SSM) DescribeDocument(input *DescribeDocumentInput) (*DescribeDocumentOutput, error) {
	req, out := c.DescribeDocumentRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeDocumentParameters = "DescribeDocumentParameters"

// DescribeDocumentParametersRequest generates a request for the DescribeDocumentParameters operation.
func (c *SSM) DescribeDocumentParametersRequest(input *DescribeDocumentParametersInput) (req *request.Request, output *DescribeDocumentParametersOutput) {
	op := &request.Operation{
		Name:       opDescribeDocumentParameters,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDocumentParametersInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeDocumentParametersOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeDocumentParameters(input *DescribeDocumentParametersInput) (*DescribeDocumentParametersOutput, error) {
	req, out := c.DescribeDocumentParametersRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeDocumentPermission = "DescribeDocumentPermission"

// DescribeDocumentPermissionRequest generates a request for the DescribeDocumentPermission operation.
func (c *SSM) DescribeDocumentPermissionRequest(input *DescribeDocumentPermissionInput) (req *request.Request, output *DescribeDocumentPermissionOutput) {
	op := &request.Operation{
		Name:       opDescribeDocumentPermission,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDocumentPermissionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeDocumentPermissionOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeDocumentPermission(input *DescribeDocumentPermissionInput) (*DescribeDocumentPermissionOutput, error) {
	req, out := c.DescribeDocumentPermissionRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeInstanceAssociations = "DescribeInstanceAssociations"

// DescribeInstanceAssociationsRequest generates a request for the DescribeInstanceAssociations operation.
func (c *SSM) DescribeInstanceAssociationsRequest(input *DescribeInstanceAssociationsInput) (req *request.Request, output *DescribeInstanceAssociationsOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstanceAssociationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeInstanceAssociationsOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeInstanceAssociations(input *DescribeInstanceAssociationsInput) (*DescribeInstanceAssociationsOutput, error) {
	req, out := c.DescribeInstanceAssociationsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeInstanceAssociationsStatus = "DescribeInstanceAssociationsStatus"

// DescribeInstanceAssociationsStatusRequest generates a request for the DescribeInstanceAssociationsStatus operation.
func (c *SSM) DescribeInstanceAssociationsStatusRequest(input *DescribeInstanceAssociationsStatusInput) (req *request.Request, output *DescribeInstanceAssociationsStatusOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceAssociationsStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstanceAssociationsStatusInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeInstanceAssociationsStatusOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeInstanceAssociationsStatus(input *DescribeInstanceAssociationsStatusInput) (*DescribeInstanceAssociationsStatusOutput, error) {
	req, out := c.DescribeInstanceAssociationsStatusRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeInstanceInformation = "DescribeInstanceInformation"

// DescribeInstanceInformationRequest generates a request for the DescribeInstanceInformation operation.
func (c *SSM) DescribeInstanceInformationRequest(input *DescribeInstanceInformationInput) (req *request.Request, output *DescribeInstanceInformationOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceInformation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstanceInformationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeInstanceInformationOutput{}
	req.Data = output
	return
}

// Describes one or more of your instances. You can use this to get information
// about instances like the operating system platform, the SSM agent version,
// status etc. If you specify one or more instance IDs, it returns information
// for those instances. If you do not specify instance IDs, it returns information
// for all your instances. If you specify an instance ID that is not valid or
// an instance that you do not own, you receive an error.
func (c *SSM) DescribeInstanceInformation(input *DescribeInstanceInformationInput) (*DescribeInstanceInformationOutput, error) {
	req, out := c.DescribeInstanceInformationRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeInstanceProperties = "DescribeInstanceProperties"

// DescribeInstancePropertiesRequest generates a request for the DescribeInstanceProperties operation.
func (c *SSM) DescribeInstancePropertiesRequest(input *DescribeInstancePropertiesInput) (req *request.Request, output *DescribeInstancePropertiesOutput) {
	op := &request.Operation{
		Name:       opDescribeInstanceProperties,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstancePropertiesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeInstancePropertiesOutput{}
	req.Data = output
	return
}

func (c *SSM) DescribeInstanceProperties(input *DescribeInstancePropertiesInput) (*DescribeInstancePropertiesOutput, error) {
	req, out := c.DescribeInstancePropertiesRequest(input)
	err := req.Send()
	return out, err
}

const opGetAutomationActivityType = "GetAutomationActivityType"

// GetAutomationActivityTypeRequest generates a request for the GetAutomationActivityType operation.
func (c *SSM) GetAutomationActivityTypeRequest(input *GetAutomationActivityTypeInput) (req *request.Request, output *GetAutomationActivityTypeOutput) {
	op := &request.Operation{
		Name:       opGetAutomationActivityType,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAutomationActivityTypeInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetAutomationActivityTypeOutput{}
	req.Data = output
	return
}

func (c *SSM) GetAutomationActivityType(input *GetAutomationActivityTypeInput) (*GetAutomationActivityTypeOutput, error) {
	req, out := c.GetAutomationActivityTypeRequest(input)
	err := req.Send()
	return out, err
}

const opGetAutomationDefinition = "GetAutomationDefinition"

// GetAutomationDefinitionRequest generates a request for the GetAutomationDefinition operation.
func (c *SSM) GetAutomationDefinitionRequest(input *GetAutomationDefinitionRequest) (req *request.Request, output *GetAutomationDefinitionOutput) {
	op := &request.Operation{
		Name:       opGetAutomationDefinition,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAutomationDefinitionRequest{}
	}

	req = c.newRequest(op, input, output)
	output = &GetAutomationDefinitionOutput{}
	req.Data = output
	return
}

func (c *SSM) GetAutomationDefinition(input *GetAutomationDefinitionRequest) (*GetAutomationDefinitionOutput, error) {
	req, out := c.GetAutomationDefinitionRequest(input)
	err := req.Send()
	return out, err
}

const opGetAutomationDefinitionStrict = "GetAutomationDefinitionStrict"

// GetAutomationDefinitionStrictRequest generates a request for the GetAutomationDefinitionStrict operation.
func (c *SSM) GetAutomationDefinitionStrictRequest(input *GetAutomationDefinitionRequest) (req *request.Request, output *GetAutomationDefinitionStrictOutput) {
	op := &request.Operation{
		Name:       opGetAutomationDefinitionStrict,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAutomationDefinitionRequest{}
	}

	req = c.newRequest(op, input, output)
	output = &GetAutomationDefinitionStrictOutput{}
	req.Data = output
	return
}

func (c *SSM) GetAutomationDefinitionStrict(input *GetAutomationDefinitionRequest) (*GetAutomationDefinitionStrictOutput, error) {
	req, out := c.GetAutomationDefinitionStrictRequest(input)
	err := req.Send()
	return out, err
}

const opGetAutomationExecution = "GetAutomationExecution"

// GetAutomationExecutionRequest generates a request for the GetAutomationExecution operation.
func (c *SSM) GetAutomationExecutionRequest(input *GetAutomationExecutionInput) (req *request.Request, output *GetAutomationExecutionOutput) {
	op := &request.Operation{
		Name:       opGetAutomationExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAutomationExecutionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetAutomationExecutionOutput{}
	req.Data = output
	return
}

func (c *SSM) GetAutomationExecution(input *GetAutomationExecutionInput) (*GetAutomationExecutionOutput, error) {
	req, out := c.GetAutomationExecutionRequest(input)
	err := req.Send()
	return out, err
}

const opGetDocument = "GetDocument"

// GetDocumentRequest generates a request for the GetDocument operation.
func (c *SSM) GetDocumentRequest(input *GetDocumentInput) (req *request.Request, output *GetDocumentOutput) {
	op := &request.Operation{
		Name:       opGetDocument,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDocumentInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetDocumentOutput{}
	req.Data = output
	return
}

// Gets the contents of the specified SSM document.
func (c *SSM) GetDocument(input *GetDocumentInput) (*GetDocumentOutput, error) {
	req, out := c.GetDocumentRequest(input)
	err := req.Send()
	return out, err
}

const opGetInventory = "GetInventory"

// GetInventoryRequest generates a request for the GetInventory operation.
func (c *SSM) GetInventoryRequest(input *GetInventoryInput) (req *request.Request, output *GetInventoryOutput) {
	op := &request.Operation{
		Name:       opGetInventory,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetInventoryInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetInventoryOutput{}
	req.Data = output
	return
}

func (c *SSM) GetInventory(input *GetInventoryInput) (*GetInventoryOutput, error) {
	req, out := c.GetInventoryRequest(input)
	err := req.Send()
	return out, err
}

const opGetInventorySchema = "GetInventorySchema"

// GetInventorySchemaRequest generates a request for the GetInventorySchema operation.
func (c *SSM) GetInventorySchemaRequest(input *GetInventorySchemaInput) (req *request.Request, output *GetInventorySchemaOutput) {
	op := &request.Operation{
		Name:       opGetInventorySchema,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetInventorySchemaInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetInventorySchemaOutput{}
	req.Data = output
	return
}

func (c *SSM) GetInventorySchema(input *GetInventorySchemaInput) (*GetInventorySchemaOutput, error) {
	req, out := c.GetInventorySchemaRequest(input)
	err := req.Send()
	return out, err
}

const opListAssociations = "ListAssociations"

// ListAssociationsRequest generates a request for the ListAssociations operation.
func (c *SSM) ListAssociationsRequest(input *ListAssociationsInput) (req *request.Request, output *ListAssociationsOutput) {
	op := &request.Operation{
		Name:       opListAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAssociationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListAssociationsOutput{}
	req.Data = output
	return
}

// Lists the associations for the specified SSM document or instance.
func (c *SSM) ListAssociations(input *ListAssociationsInput) (*ListAssociationsOutput, error) {
	req, out := c.ListAssociationsRequest(input)
	err := req.Send()
	return out, err
}

func (c *SSM) ListAssociationsPages(input *ListAssociationsInput, fn func(p *ListAssociationsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListAssociationsRequest(input)
	page.Handlers.Build.PushBack(request.MakeAddToUserAgentFreeFormHandler("Paginator"))
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListAssociationsOutput), lastPage)
	})
}

const opListCommandInvocations = "ListCommandInvocations"

// ListCommandInvocationsRequest generates a request for the ListCommandInvocations operation.
func (c *SSM) ListCommandInvocationsRequest(input *ListCommandInvocationsInput) (req *request.Request, output *ListCommandInvocationsOutput) {
	op := &request.Operation{
		Name:       opListCommandInvocations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListCommandInvocationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListCommandInvocationsOutput{}
	req.Data = output
	return
}

// An invocation is copy of a command sent to a specific instance. A command
// can apply to one or more instances. A command invocation applies to one instance.
// For example, if a user executes SendCommand against three instances, then
// a command invocation is created for each requested instance ID. ListCommandInvocations
// provide status about command execution.
func (c *SSM) ListCommandInvocations(input *ListCommandInvocationsInput) (*ListCommandInvocationsOutput, error) {
	req, out := c.ListCommandInvocationsRequest(input)
	err := req.Send()
	return out, err
}

func (c *SSM) ListCommandInvocationsPages(input *ListCommandInvocationsInput, fn func(p *ListCommandInvocationsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListCommandInvocationsRequest(input)
	page.Handlers.Build.PushBack(request.MakeAddToUserAgentFreeFormHandler("Paginator"))
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListCommandInvocationsOutput), lastPage)
	})
}

const opListCommands = "ListCommands"

// ListCommandsRequest generates a request for the ListCommands operation.
func (c *SSM) ListCommandsRequest(input *ListCommandsInput) (req *request.Request, output *ListCommandsOutput) {
	op := &request.Operation{
		Name:       opListCommands,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListCommandsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListCommandsOutput{}
	req.Data = output
	return
}

// Lists the commands requested by users of the AWS account.
func (c *SSM) ListCommands(input *ListCommandsInput) (*ListCommandsOutput, error) {
	req, out := c.ListCommandsRequest(input)
	err := req.Send()
	return out, err
}

func (c *SSM) ListCommandsPages(input *ListCommandsInput, fn func(p *ListCommandsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListCommandsRequest(input)
	page.Handlers.Build.PushBack(request.MakeAddToUserAgentFreeFormHandler("Paginator"))
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListCommandsOutput), lastPage)
	})
}

const opListDocumentVersions = "ListDocumentVersions"

// ListDocumentVersionsRequest generates a request for the ListDocumentVersions operation.
func (c *SSM) ListDocumentVersionsRequest(input *ListDocumentVersionsInput) (req *request.Request, output *ListDocumentVersionsOutput) {
	op := &request.Operation{
		Name:       opListDocumentVersions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListDocumentVersionsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListDocumentVersionsOutput{}
	req.Data = output
	return
}

func (c *SSM) ListDocumentVersions(input *ListDocumentVersionsInput) (*ListDocumentVersionsOutput, error) {
	req, out := c.ListDocumentVersionsRequest(input)
	err := req.Send()
	return out, err
}

const opListDocuments = "ListDocuments"

// ListDocumentsRequest generates a request for the ListDocuments operation.
func (c *SSM) ListDocumentsRequest(input *ListDocumentsInput) (req *request.Request, output *ListDocumentsOutput) {
	op := &request.Operation{
		Name:       opListDocuments,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListDocumentsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListDocumentsOutput{}
	req.Data = output
	return
}

// Describes one or more of your SSM documents.
func (c *SSM) ListDocuments(input *ListDocumentsInput) (*ListDocumentsOutput, error) {
	req, out := c.ListDocumentsRequest(input)
	err := req.Send()
	return out, err
}

func (c *SSM) ListDocumentsPages(input *ListDocumentsInput, fn func(p *ListDocumentsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListDocumentsRequest(input)
	page.Handlers.Build.PushBack(request.MakeAddToUserAgentFreeFormHandler("Paginator"))
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListDocumentsOutput), lastPage)
	})
}

const opListInstanceAssociations = "ListInstanceAssociations"

// ListInstanceAssociationsRequest generates a request for the ListInstanceAssociations operation.
func (c *SSM) ListInstanceAssociationsRequest(input *ListInstanceAssociationsInput) (req *request.Request, output *ListInstanceAssociationsOutput) {
	op := &request.Operation{
		Name:       opListInstanceAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListInstanceAssociationsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListInstanceAssociationsOutput{}
	req.Data = output
	return
}

func (c *SSM) ListInstanceAssociations(input *ListInstanceAssociationsInput) (*ListInstanceAssociationsOutput, error) {
	req, out := c.ListInstanceAssociationsRequest(input)
	err := req.Send()
	return out, err
}

const opListTagsForResource = "ListTagsForResource"

// ListTagsForResourceRequest generates a request for the ListTagsForResource operation.
func (c *SSM) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {
	op := &request.Operation{
		Name:       opListTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForResourceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListTagsForResourceOutput{}
	req.Data = output
	return
}

func (c *SSM) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	err := req.Send()
	return out, err
}

const opModifyDocumentPermission = "ModifyDocumentPermission"

// ModifyDocumentPermissionRequest generates a request for the ModifyDocumentPermission operation.
func (c *SSM) ModifyDocumentPermissionRequest(input *ModifyDocumentPermissionInput) (req *request.Request, output *ModifyDocumentPermissionOutput) {
	op := &request.Operation{
		Name:       opModifyDocumentPermission,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDocumentPermissionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ModifyDocumentPermissionOutput{}
	req.Data = output
	return
}

func (c *SSM) ModifyDocumentPermission(input *ModifyDocumentPermissionInput) (*ModifyDocumentPermissionOutput, error) {
	req, out := c.ModifyDocumentPermissionRequest(input)
	err := req.Send()
	return out, err
}

const opPutInventory = "PutInventory"

// PutInventoryRequest generates a request for the PutInventory operation.
func (c *SSM) PutInventoryRequest(input *PutInventoryInput) (req *request.Request, output *PutInventoryOutput) {
	op := &request.Operation{
		Name:       opPutInventory,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &PutInventoryInput{}
	}

	req = c.newRequest(op, input, output)
	output = &PutInventoryOutput{}
	req.Data = output
	return
}

func (c *SSM) PutInventory(input *PutInventoryInput) (*PutInventoryOutput, error) {
	req, out := c.PutInventoryRequest(input)
	err := req.Send()
	return out, err
}

const opRegisterManagedInstance = "RegisterManagedInstance"

// RegisterManagedInstanceRequest generates a request for the RegisterManagedInstance operation.
func (c *SSM) RegisterManagedInstanceRequest(input *RegisterManagedInstanceInput) (req *request.Request, output *RegisterManagedInstanceOutput) {
	op := &request.Operation{
		Name:       opRegisterManagedInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RegisterManagedInstanceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &RegisterManagedInstanceOutput{}
	req.Data = output
	return
}

func (c *SSM) RegisterManagedInstance(input *RegisterManagedInstanceInput) (*RegisterManagedInstanceOutput, error) {
	req, out := c.RegisterManagedInstanceRequest(input)
	err := req.Send()
	return out, err
}

const opRemoveTagsFromResource = "RemoveTagsFromResource"

// RemoveTagsFromResourceRequest generates a request for the RemoveTagsFromResource operation.
func (c *SSM) RemoveTagsFromResourceRequest(input *RemoveTagsFromResourceInput) (req *request.Request, output *RemoveTagsFromResourceOutput) {
	op := &request.Operation{
		Name:       opRemoveTagsFromResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveTagsFromResourceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &RemoveTagsFromResourceOutput{}
	req.Data = output
	return
}

func (c *SSM) RemoveTagsFromResource(input *RemoveTagsFromResourceInput) (*RemoveTagsFromResourceOutput, error) {
	req, out := c.RemoveTagsFromResourceRequest(input)
	err := req.Send()
	return out, err
}

const opRequestManagedInstanceRoleToken = "RequestManagedInstanceRoleToken"

// RequestManagedInstanceRoleTokenRequest generates a request for the RequestManagedInstanceRoleToken operation.
func (c *SSM) RequestManagedInstanceRoleTokenRequest(input *RequestManagedInstanceRoleTokenInput) (req *request.Request, output *RequestManagedInstanceRoleTokenOutput) {
	op := &request.Operation{
		Name:       opRequestManagedInstanceRoleToken,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RequestManagedInstanceRoleTokenInput{}
	}

	req = c.newRequest(op, input, output)
	output = &RequestManagedInstanceRoleTokenOutput{}
	req.Data = output
	return
}

func (c *SSM) RequestManagedInstanceRoleToken(input *RequestManagedInstanceRoleTokenInput) (*RequestManagedInstanceRoleTokenOutput, error) {
	req, out := c.RequestManagedInstanceRoleTokenRequest(input)
	err := req.Send()
	return out, err
}

const opSendCommand = "SendCommand"

// SendCommandRequest generates a request for the SendCommand operation.
func (c *SSM) SendCommandRequest(input *SendCommandInput) (req *request.Request, output *SendCommandOutput) {
	op := &request.Operation{
		Name:       opSendCommand,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SendCommandInput{}
	}

	req = c.newRequest(op, input, output)
	output = &SendCommandOutput{}
	req.Data = output
	return
}

// Executes commands on one or more remote instances.
func (c *SSM) SendCommand(input *SendCommandInput) (*SendCommandOutput, error) {
	req, out := c.SendCommandRequest(input)
	err := req.Send()
	return out, err
}

const opStartAutomationExecution = "StartAutomationExecution"

// StartAutomationExecutionRequest generates a request for the StartAutomationExecution operation.
func (c *SSM) StartAutomationExecutionRequest(input *StartAutomationExecutionInput) (req *request.Request, output *StartAutomationExecutionOutput) {
	op := &request.Operation{
		Name:       opStartAutomationExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartAutomationExecutionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &StartAutomationExecutionOutput{}
	req.Data = output
	return
}

func (c *SSM) StartAutomationExecution(input *StartAutomationExecutionInput) (*StartAutomationExecutionOutput, error) {
	req, out := c.StartAutomationExecutionRequest(input)
	err := req.Send()
	return out, err
}

const opStopAutomationExecution = "StopAutomationExecution"

// StopAutomationExecutionRequest generates a request for the StopAutomationExecution operation.
func (c *SSM) StopAutomationExecutionRequest(input *StopAutomationExecutionInput) (req *request.Request, output *StopAutomationExecutionOutput) {
	op := &request.Operation{
		Name:       opStopAutomationExecution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StopAutomationExecutionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &StopAutomationExecutionOutput{}
	req.Data = output
	return
}

func (c *SSM) StopAutomationExecution(input *StopAutomationExecutionInput) (*StopAutomationExecutionOutput, error) {
	req, out := c.StopAutomationExecutionRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateAssociation = "UpdateAssociation"

// UpdateAssociationRequest generates a request for the UpdateAssociation operation.
func (c *SSM) UpdateAssociationRequest(input *UpdateAssociationInput) (req *request.Request, output *UpdateAssociationOutput) {
	op := &request.Operation{
		Name:       opUpdateAssociation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssociationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateAssociationOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateAssociation(input *UpdateAssociationInput) (*UpdateAssociationOutput, error) {
	req, out := c.UpdateAssociationRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateAssociationStatus = "UpdateAssociationStatus"

// UpdateAssociationStatusRequest generates a request for the UpdateAssociationStatus operation.
func (c *SSM) UpdateAssociationStatusRequest(input *UpdateAssociationStatusInput) (req *request.Request, output *UpdateAssociationStatusOutput) {
	op := &request.Operation{
		Name:       opUpdateAssociationStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssociationStatusInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateAssociationStatusOutput{}
	req.Data = output
	return
}

// Updates the status of the SSM document associated with the specified instance.
func (c *SSM) UpdateAssociationStatus(input *UpdateAssociationStatusInput) (*UpdateAssociationStatusOutput, error) {
	req, out := c.UpdateAssociationStatusRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateAutomationDefinitionDefaultVersion = "UpdateAutomationDefinitionDefaultVersion"

// UpdateAutomationDefinitionDefaultVersionRequest generates a request for the UpdateAutomationDefinitionDefaultVersion operation.
func (c *SSM) UpdateAutomationDefinitionDefaultVersionRequest(input *UpdateAutomationDefinitionDefaultVersionInput) (req *request.Request, output *UpdateAutomationDefinitionDefaultVersionOutput) {
	op := &request.Operation{
		Name:       opUpdateAutomationDefinitionDefaultVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAutomationDefinitionDefaultVersionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateAutomationDefinitionDefaultVersionOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateAutomationDefinitionDefaultVersion(input *UpdateAutomationDefinitionDefaultVersionInput) (*UpdateAutomationDefinitionDefaultVersionOutput, error) {
	req, out := c.UpdateAutomationDefinitionDefaultVersionRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateDocument = "UpdateDocument"

// UpdateDocumentRequest generates a request for the UpdateDocument operation.
func (c *SSM) UpdateDocumentRequest(input *UpdateDocumentInput) (req *request.Request, output *UpdateDocumentOutput) {
	op := &request.Operation{
		Name:       opUpdateDocument,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateDocumentInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateDocumentOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateDocument(input *UpdateDocumentInput) (*UpdateDocumentOutput, error) {
	req, out := c.UpdateDocumentRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateDocumentDefaultVersion = "UpdateDocumentDefaultVersion"

// UpdateDocumentDefaultVersionRequest generates a request for the UpdateDocumentDefaultVersion operation.
func (c *SSM) UpdateDocumentDefaultVersionRequest(input *UpdateDocumentDefaultVersionInput) (req *request.Request, output *UpdateDocumentDefaultVersionOutput) {
	op := &request.Operation{
		Name:       opUpdateDocumentDefaultVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateDocumentDefaultVersionInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateDocumentDefaultVersionOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateDocumentDefaultVersion(input *UpdateDocumentDefaultVersionInput) (*UpdateDocumentDefaultVersionOutput, error) {
	req, out := c.UpdateDocumentDefaultVersionRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateInstanceInformation = "UpdateInstanceInformation"

// UpdateInstanceInformationRequest generates a request for the UpdateInstanceInformation operation.
func (c *SSM) UpdateInstanceInformationRequest(input *UpdateInstanceInformationInput) (req *request.Request, output *UpdateInstanceInformationOutput) {
	op := &request.Operation{
		Name:       opUpdateInstanceInformation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateInstanceInformationInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateInstanceInformationOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateInstanceInformation(input *UpdateInstanceInformationInput) (*UpdateInstanceInformationOutput, error) {
	req, out := c.UpdateInstanceInformationRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateManagedInstancePublicKey = "UpdateManagedInstancePublicKey"

// UpdateManagedInstancePublicKeyRequest generates a request for the UpdateManagedInstancePublicKey operation.
func (c *SSM) UpdateManagedInstancePublicKeyRequest(input *UpdateManagedInstancePublicKeyInput) (req *request.Request, output *UpdateManagedInstancePublicKeyOutput) {
	op := &request.Operation{
		Name:       opUpdateManagedInstancePublicKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateManagedInstancePublicKeyInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateManagedInstancePublicKeyOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateManagedInstancePublicKey(input *UpdateManagedInstancePublicKeyInput) (*UpdateManagedInstancePublicKeyOutput, error) {
	req, out := c.UpdateManagedInstancePublicKeyRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateManagedInstanceRole = "UpdateManagedInstanceRole"

// UpdateManagedInstanceRoleRequest generates a request for the UpdateManagedInstanceRole operation.
func (c *SSM) UpdateManagedInstanceRoleRequest(input *UpdateManagedInstanceRoleInput) (req *request.Request, output *UpdateManagedInstanceRoleOutput) {
	op := &request.Operation{
		Name:       opUpdateManagedInstanceRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateManagedInstanceRoleInput{}
	}

	req = c.newRequest(op, input, output)
	output = &UpdateManagedInstanceRoleOutput{}
	req.Data = output
	return
}

func (c *SSM) UpdateManagedInstanceRole(input *UpdateManagedInstanceRoleInput) (*UpdateManagedInstanceRoleOutput, error) {
	req, out := c.UpdateManagedInstanceRoleRequest(input)
	err := req.Send()
	return out, err
}

type Activation struct {
	_ struct{} `type:"structure"`

	ActivationId *string `type:"string"`

	CreatedDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	DefaultInstanceName *string `type:"string"`

	Description *string `type:"string"`

	ExpirationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	Expired *bool `type:"boolean"`

	IamRole *string `type:"string"`

	RegistrationLimit *int64 `min:"1" type:"integer"`

	RegistrationsCount *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s Activation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Activation) GoString() string {
	return s.String()
}

type ActivityExecution struct {
	_ struct{} `type:"structure"`

	ActivityId *string `type:"string"`

	ActivityStatus *string `type:"string" enum:"AutomationExecutionStatus"`

	Inputs map[string]*string `type:"map"`

	Outputs map[string][]*string `min:"1" type:"map"`

	Response *string `type:"string"`

	ResponseCode *string `type:"string"`
}

// String returns the string representation
func (s ActivityExecution) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ActivityExecution) GoString() string {
	return s.String()
}

type AddTagsToResourceInput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string" required:"true"`

	ResourceType *string `type:"string" required:"true" enum:"ResourceTypeForTagging"`

	Tags []*Tag `type:"list" required:"true"`
}

// String returns the string representation
func (s AddTagsToResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddTagsToResourceInput) GoString() string {
	return s.String()
}

type AddTagsToResourceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s AddTagsToResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddTagsToResourceOutput) GoString() string {
	return s.String()
}

type ApplyAssociationsInput struct {
	_ struct{} `type:"structure"`

	AssociationIds []*string `min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s ApplyAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyAssociationsInput) GoString() string {
	return s.String()
}

type ApplyAssociationsOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ApplyAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyAssociationsOutput) GoString() string {
	return s.String()
}

// Describes an association of an SSM document and an instance.
type Association struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The ID of the instance.
	InstanceId *string `type:"string"`

	LastExecutionDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The name of the SSM document.
	Name *string `type:"string"`

	Overview *AssociationOverview `type:"structure"`

	Status *string `type:"string" enum:"AssociationStatusName"`

	Targets []*TargetEntry `min:"1" type:"list"`
}

// String returns the string representation
func (s Association) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Association) GoString() string {
	return s.String()
}

// Describes the parameters for a document.
type AssociationDescription struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	// The date when the association was made.
	Date *time.Time `type:"timestamp" timestampFormat:"unix"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	ExecutionDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The ID of the instance.
	InstanceId *string `type:"string"`

	LastUpdateAssociationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The name of the SSM document.
	Name *string `type:"string"`

	Overview *AssociationOverview `type:"structure"`

	// A description of the parameters for a document.
	Parameters map[string][]*string `type:"map"`

	ScheduleExpression *string `min:"1" type:"string"`

	// The association status.
	Status *AssociationStatus `type:"structure"`

	Targets []*TargetEntry `min:"1" type:"list"`
}

// String returns the string representation
func (s AssociationDescription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationDescription) GoString() string {
	return s.String()
}

// Describes a filter.
type AssociationFilter struct {
	_ struct{} `type:"structure"`

	// The name of the filter.
	Key *string `locationName:"key" type:"string" required:"true" enum:"AssociationFilterKey"`

	// The filter value.
	Value *string `locationName:"value" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s AssociationFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationFilter) GoString() string {
	return s.String()
}

type AssociationOverview struct {
	_ struct{} `type:"structure"`

	Failed *int64 `type:"integer"`

	Pending *int64 `type:"integer"`

	Success *int64 `type:"integer"`
}

// String returns the string representation
func (s AssociationOverview) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationOverview) GoString() string {
	return s.String()
}

// Describes an association status.
type AssociationStatus struct {
	_ struct{} `type:"structure"`

	// A user-defined string.
	AdditionalInfo *string `type:"string"`

	// The date when the status changed.
	Date *time.Time `type:"timestamp" timestampFormat:"unix" required:"true"`

	// The reason for the status.
	Message *string `min:"1" type:"string" required:"true"`

	// The status.
	Name *string `type:"string" required:"true" enum:"AssociationStatusName"`
}

// String returns the string representation
func (s AssociationStatus) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationStatus) GoString() string {
	return s.String()
}

type AutomationActivity struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	Inputs []*AutomationArgument `type:"list"`

	Name *string `type:"string"`

	Outputs []*AutomationArgument `type:"list"`
}

// String returns the string representation
func (s AutomationActivity) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationActivity) GoString() string {
	return s.String()
}

type AutomationArgument struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string"`

	Regex *string `type:"string"`

	Required *bool `type:"boolean"`

	Type *string `type:"string" enum:"AutomationArgumentType"`
}

// String returns the string representation
func (s AutomationArgument) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationArgument) GoString() string {
	return s.String()
}

type AutomationDefinition struct {
	_ struct{} `type:"structure"`

	Comment *string `type:"string"`

	CreateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	CreatedBy *string `type:"string"`

	DefinitionContent *string `min:"1" type:"string"`

	IsDefault *bool `type:"boolean"`

	LastExecuteTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Version *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s AutomationDefinition) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationDefinition) GoString() string {
	return s.String()
}

type AutomationDefinitionDocument struct {
	_ struct{} `type:"structure"`

	Activities []*AutomationStepActivity `type:"list"`

	AssumeRole *string `min:"20" type:"string"`

	CloudWatchLogGroup *string `type:"string"`

	Description *string `type:"string"`

	Outputs []*string `type:"list"`

	Parameters []*AutomationStepParameter `type:"list"`

	Version *string `min:"3" type:"string"`
}

// String returns the string representation
func (s AutomationDefinitionDocument) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationDefinitionDocument) GoString() string {
	return s.String()
}

type AutomationDefinitionMetadata struct {
	_ struct{} `type:"structure"`

	DefaultVersion *int64 `min:"1" type:"integer"`

	DefaultVersionComment *string `type:"string"`

	DefaultVersionCreateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	DefaultVersionCreatedBy *string `type:"string"`

	DefaultVersionLastExecuteTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s AutomationDefinitionMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationDefinitionMetadata) GoString() string {
	return s.String()
}

type AutomationDefinitionVersionMetadata struct {
	_ struct{} `type:"structure"`

	Comment *string `type:"string"`

	CreateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	CreatedBy *string `type:"string"`

	IsDefault *bool `type:"boolean"`

	LastExecuteTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Version *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s AutomationDefinitionVersionMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationDefinitionVersionMetadata) GoString() string {
	return s.String()
}

type AutomationExecution struct {
	_ struct{} `type:"structure"`

	ActivityExecutions []*ActivityExecution `type:"list"`

	AutomationExecutionId *string `min:"36" type:"string"`

	AutomationExecutionStatus *string `type:"string" enum:"AutomationExecutionStatus"`

	DefinitionName *string `type:"string"`

	DefinitionVersion *int64 `min:"1" type:"integer"`

	ExecutionEndTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	ExecutionStartTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Inputs map[string][]*string `min:"1" type:"map"`

	Outputs map[string][]*string `min:"1" type:"map"`
}

// String returns the string representation
func (s AutomationExecution) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationExecution) GoString() string {
	return s.String()
}

type AutomationExecutionFilter struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string" required:"true" enum:"AutomationExecutionFilterKey"`

	Values []*string `min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s AutomationExecutionFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationExecutionFilter) GoString() string {
	return s.String()
}

type AutomationExecutionMetadata struct {
	_ struct{} `type:"structure"`

	AutomationExecutionId *string `min:"36" type:"string"`

	AutomationExecutionStatus *string `type:"string" enum:"AutomationExecutionStatus"`

	DefinitionName *string `type:"string"`

	DefinitionVersion *int64 `min:"1" type:"integer"`

	ExecutedBy *string `type:"string"`

	ExecutionEndTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	ExecutionStartTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	LogFile *string `type:"string"`

	Outputs map[string][]*string `min:"1" type:"map"`
}

// String returns the string representation
func (s AutomationExecutionMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationExecutionMetadata) GoString() string {
	return s.String()
}

type AutomationStepActivity struct {
	_ struct{} `type:"structure"`

	ActivityType *string `type:"string"`

	Id *string `type:"string"`

	Inputs []*AutomationStepInput `type:"list"`

	MaxAttempts *int64 `min:"1" type:"integer"`

	OnFailure *string `type:"string" enum:"AutomationStepFailureResolution"`

	TimeoutSeconds *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s AutomationStepActivity) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationStepActivity) GoString() string {
	return s.String()
}

type AutomationStepInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s AutomationStepInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationStepInput) GoString() string {
	return s.String()
}

type AutomationStepParameter struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	Name *string `type:"string"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s AutomationStepParameter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AutomationStepParameter) GoString() string {
	return s.String()
}

type CancelCommandInput struct {
	_ struct{} `type:"structure"`

	// The ID of the command you want to cancel.
	CommandId *string `min:"36" type:"string" required:"true"`

	// (Optional) A list of instance IDs on which you want to cancel the command.
	// If not provided, the command is canceled on every instance on which it was
	// requested.
	InstanceIds []*string `min:"1" type:"list"`
}

// String returns the string representation
func (s CancelCommandInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelCommandInput) GoString() string {
	return s.String()
}

// Whether or not the command was successfully canceled. There is no guarantee
// that a request can be canceled.
type CancelCommandOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s CancelCommandOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelCommandOutput) GoString() string {
	return s.String()
}

// Describes a command request.
type Command struct {
	_ struct{} `type:"structure"`

	// A unique identifier for this command.
	CommandId *string `min:"36" type:"string"`

	// User-specified information about the command, such as a brief description
	// of what the command should do.
	Comment *string `type:"string"`

	// The name of the SSM document requested for execution.
	DocumentName *string `type:"string"`

	// If this time is reached and the command has not already started executing,
	// it will not execute. Calculated based on the ExpiresAfter user input provided
	// as part of the SendCommand API.
	ExpiresAfter *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The instance IDs against which this command was requested.
	InstanceIds []*string `min:"1" type:"list"`

	NotificationConfig *NotificationConfig `type:"structure"`

	// The S3 bucket where the responses to the command executions should be stored.
	// This was requested when issuing the command.
	OutputS3BucketName *string `min:"3" type:"string"`

	// The S3 directory path inside the bucket where the responses to the command
	// executions should be stored. This was requested when issuing the command.
	OutputS3KeyPrefix *string `type:"string"`

	// The parameter values to be inserted in the SSM document when executing the
	// command.
	Parameters map[string][]*string `type:"map"`

	// The date and time the command was requested.
	RequestedDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	ServiceRole *string `type:"string"`

	// The status of the command.
	Status *string `type:"string" enum:"CommandStatus"`
}

// String returns the string representation
func (s Command) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Command) GoString() string {
	return s.String()
}

// Describes a command filter.
type CommandFilter struct {
	_ struct{} `type:"structure"`

	// The name of the filter. For example, requested date and time.
	Key *string `locationName:"key" type:"string" required:"true" enum:"CommandFilterKey"`

	// The filter value. For example: June 30, 2015.
	Value *string `locationName:"value" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CommandFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CommandFilter) GoString() string {
	return s.String()
}

// An invocation is copy of a command sent to a specific instance. A command
// can apply to one or more instances. A command invocation applies to one instance.
// For example, if a user executes SendCommand against three instances, then
// a command invocation is created for each requested instance ID. A command
// invocation returns status and detail information about a command you executed.
type CommandInvocation struct {
	_ struct{} `type:"structure"`

	// The command against which this invocation was requested.
	CommandId *string `min:"36" type:"string"`

	CommandPlugins []*CommandPlugin `type:"list"`

	// User-specified information about the command, such as a brief description
	// of what the command should do.
	Comment *string `type:"string"`

	// The document name that was requested for execution.
	DocumentName *string `type:"string"`

	// The instance ID in which this invocation was requested.
	InstanceId *string `type:"string"`

	NotificationConfig *NotificationConfig `type:"structure"`

	// The time and date the request was sent to this instance.
	RequestedDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	ServiceRole *string `type:"string"`

	// Whether or not the invocation succeeded, failed, or is pending.
	Status *string `type:"string" enum:"CommandInvocationStatus"`

	// Gets the trace output sent by the agent.
	TraceOutput *string `type:"string"`
}

// String returns the string representation
func (s CommandInvocation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CommandInvocation) GoString() string {
	return s.String()
}

// Describes plugin details.
type CommandPlugin struct {
	_ struct{} `type:"structure"`

	// The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin,
	// aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch,
	// aws:runShellScript, or aws:updateSSMAgent.
	Name *string `min:"4" type:"string"`

	// Output of the plugin execution.
	Output *string `type:"string"`

	// The S3 bucket where the responses to the command executions should be stored.
	// This was requested when issuing the command.
	OutputS3BucketName *string `min:"3" type:"string"`

	// The S3 directory path inside the bucket where the responses to the command
	// executions should be stored. This was requested when issuing the command.
	OutputS3KeyPrefix *string `type:"string"`

	// A numeric response code generated after executing the plugin.
	ResponseCode *int64 `type:"integer"`

	// The time the plugin stopped executing. Could stop prematurely if, for example,
	// a cancel command was sent.
	ResponseFinishDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The time the plugin started executing.
	ResponseStartDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The status of this plugin. You can execute a document with multiple plugins.
	Status *string `type:"string" enum:"CommandPluginStatus"`
}

// String returns the string representation
func (s CommandPlugin) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CommandPlugin) GoString() string {
	return s.String()
}

type CreateActivationInput struct {
	_ struct{} `type:"structure"`

	DefaultInstanceName *string `type:"string"`

	Description *string `type:"string"`

	ExpirationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	IamRole *string `type:"string" required:"true"`

	RegistrationLimit *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s CreateActivationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateActivationInput) GoString() string {
	return s.String()
}

type CreateActivationOutput struct {
	_ struct{} `type:"structure"`

	ActivationCode *string `min:"20" type:"string"`

	ActivationId *string `type:"string"`
}

// String returns the string representation
func (s CreateActivationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateActivationOutput) GoString() string {
	return s.String()
}

type CreateAssociationBatchInput struct {
	_ struct{} `type:"structure"`

	// One or more associations.
	Entries []*CreateAssociationBatchRequestEntry `locationNameList:"entries" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s CreateAssociationBatchInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssociationBatchInput) GoString() string {
	return s.String()
}

type CreateAssociationBatchOutput struct {
	_ struct{} `type:"structure"`

	// Information about the associations that failed.
	Failed []*FailedCreateAssociation `locationNameList:"FailedCreateAssociationEntry" type:"list"`

	// Information about the associations that succeeded.
	Successful []*AssociationDescription `locationNameList:"AssociationDescription" type:"list"`
}

// String returns the string representation
func (s CreateAssociationBatchOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssociationBatchOutput) GoString() string {
	return s.String()
}

// Describes the association of an SSM document and an instance.
type CreateAssociationBatchRequestEntry struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The ID of the instance.
	InstanceId *string `type:"string" required:"true"`

	// The name of the configuration document.
	Name *string `type:"string" required:"true"`

	// A description of the parameters for a document.
	Parameters map[string][]*string `type:"map"`

	ScheduleExpression *string `min:"1" type:"string"`

	Targets []*TargetEntry `min:"1" type:"list"`
}

// String returns the string representation
func (s CreateAssociationBatchRequestEntry) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssociationBatchRequestEntry) GoString() string {
	return s.String()
}

type CreateAssociationInput struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The Windows Server instance ID.
	InstanceId *string `type:"string" required:"true"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`

	// The parameters for the documents runtime configuration.
	Parameters map[string][]*string `type:"map"`

	ScheduleExpression *string `min:"1" type:"string"`

	Targets []*TargetEntry `min:"1" type:"list"`
}

// String returns the string representation
func (s CreateAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssociationInput) GoString() string {
	return s.String()
}

type CreateAssociationOutput struct {
	_ struct{} `type:"structure"`

	// Information about the association.
	AssociationDescription *AssociationDescription `type:"structure"`
}

// String returns the string representation
func (s CreateAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssociationOutput) GoString() string {
	return s.String()
}

type CreateAutomationDefinitionVersionInput struct {
	_ struct{} `type:"structure"`

	Comment *string `type:"string"`

	Content *string `min:"1" type:"string" required:"true"`

	CurrentVersion *int64 `min:"1" type:"integer"`

	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAutomationDefinitionVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAutomationDefinitionVersionInput) GoString() string {
	return s.String()
}

type CreateAutomationDefinitionVersionResult struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s CreateAutomationDefinitionVersionResult) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAutomationDefinitionVersionResult) GoString() string {
	return s.String()
}

type CreateAutomationDefinitionVersionStrictInput struct {
	_ struct{} `type:"structure"`

	Comment *string `type:"string"`

	Content *AutomationDefinitionDocument `type:"structure" required:"true"`

	CurrentVersion *int64 `min:"1" type:"integer"`

	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAutomationDefinitionVersionStrictInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAutomationDefinitionVersionStrictInput) GoString() string {
	return s.String()
}

type CreateDocumentInput struct {
	_ struct{} `type:"structure"`

	// A valid JSON string. For more information about the contents of this string,
	// see SSM Document (http://docs.aws.amazon.com/ssm/latest/APIReference/aws-ssm-document.html).
	Content *string `min:"1" type:"string" required:"true"`

	// A name for the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateDocumentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDocumentInput) GoString() string {
	return s.String()
}

type CreateDocumentOutput struct {
	_ struct{} `type:"structure"`

	// Information about the SSM document.
	DocumentDescription *DocumentDescription `type:"structure"`
}

// String returns the string representation
func (s CreateDocumentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDocumentOutput) GoString() string {
	return s.String()
}

type DefinitionFilter struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string" required:"true" enum:"DefinitionFilterKey"`

	Values []*string `min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DefinitionFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DefinitionFilter) GoString() string {
	return s.String()
}

type DeleteActivationInput struct {
	_ struct{} `type:"structure"`

	ActivationId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteActivationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteActivationInput) GoString() string {
	return s.String()
}

type DeleteActivationOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteActivationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteActivationOutput) GoString() string {
	return s.String()
}

type DeleteAssociationInput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	// The ID of the instance.
	InstanceId *string `type:"string" required:"true"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssociationInput) GoString() string {
	return s.String()
}

type DeleteAssociationOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssociationOutput) GoString() string {
	return s.String()
}

type DeleteAutomationDefinitionInput struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string" required:"true"`

	Version *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s DeleteAutomationDefinitionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAutomationDefinitionInput) GoString() string {
	return s.String()
}

type DeleteAutomationDefinitionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteAutomationDefinitionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAutomationDefinitionOutput) GoString() string {
	return s.String()
}

type DeleteDocumentInput struct {
	_ struct{} `type:"structure"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteDocumentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDocumentInput) GoString() string {
	return s.String()
}

type DeleteDocumentOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteDocumentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDocumentOutput) GoString() string {
	return s.String()
}

type DeregisterManagedInstanceInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeregisterManagedInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterManagedInstanceInput) GoString() string {
	return s.String()
}

type DeregisterManagedInstanceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeregisterManagedInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeregisterManagedInstanceOutput) GoString() string {
	return s.String()
}

type DescribeActivationsFilter struct {
	_ struct{} `type:"structure"`

	FilterKey *string `type:"string" enum:"DescribeActivationsFilterKeys"`

	FilterValues []*string `type:"list"`
}

// String returns the string representation
func (s DescribeActivationsFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeActivationsFilter) GoString() string {
	return s.String()
}

type DescribeActivationsInput struct {
	_ struct{} `type:"structure"`

	Filters []*DescribeActivationsFilter `type:"list"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeActivationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeActivationsInput) GoString() string {
	return s.String()
}

type DescribeActivationsOutput struct {
	_ struct{} `type:"structure"`

	ActivationList []*Activation `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeActivationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeActivationsOutput) GoString() string {
	return s.String()
}

type DescribeAssociationInput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	// The Windows Server instance ID.
	InstanceId *string `type:"string" required:"true"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssociationInput) GoString() string {
	return s.String()
}

type DescribeAssociationOutput struct {
	_ struct{} `type:"structure"`

	// Information about the association.
	AssociationDescription *AssociationDescription `type:"structure"`
}

// String returns the string representation
func (s DescribeAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssociationOutput) GoString() string {
	return s.String()
}

type DescribeAutomationActivityTypesInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeAutomationActivityTypesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationActivityTypesInput) GoString() string {
	return s.String()
}

type DescribeAutomationActivityTypesOutput struct {
	_ struct{} `type:"structure"`

	ActivityList []*string `type:"list"`
}

// String returns the string representation
func (s DescribeAutomationActivityTypesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationActivityTypesOutput) GoString() string {
	return s.String()
}

type DescribeAutomationDefinitionVersionsInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `min:"1" type:"integer"`

	Name *string `type:"string" required:"true"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationDefinitionVersionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationDefinitionVersionsInput) GoString() string {
	return s.String()
}

type DescribeAutomationDefinitionVersionsOutput struct {
	_ struct{} `type:"structure"`

	AutomationDefinitionVersionsList []*AutomationDefinitionVersionMetadata `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationDefinitionVersionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationDefinitionVersionsOutput) GoString() string {
	return s.String()
}

type DescribeAutomationDefinitionsInput struct {
	_ struct{} `type:"structure"`

	Filters []*DefinitionFilter `min:"1" type:"list"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationDefinitionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationDefinitionsInput) GoString() string {
	return s.String()
}

type DescribeAutomationDefinitionsOutput struct {
	_ struct{} `type:"structure"`

	AutomationDefinitionMetadataList []*AutomationDefinitionMetadata `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationDefinitionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationDefinitionsOutput) GoString() string {
	return s.String()
}

type DescribeAutomationExecutionsInput struct {
	_ struct{} `type:"structure"`

	Filters []*AutomationExecutionFilter `min:"1" type:"list"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationExecutionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationExecutionsInput) GoString() string {
	return s.String()
}

type DescribeAutomationExecutionsOutput struct {
	_ struct{} `type:"structure"`

	AutomationExecutionMetadataList []*AutomationExecutionMetadata `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeAutomationExecutionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAutomationExecutionsOutput) GoString() string {
	return s.String()
}

type DescribeDocumentInput struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeDocumentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentInput) GoString() string {
	return s.String()
}

type DescribeDocumentOutput struct {
	_ struct{} `type:"structure"`

	// Information about the SSM document.
	Document *DocumentDescription `type:"structure"`
}

// String returns the string representation
func (s DescribeDocumentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentOutput) GoString() string {
	return s.String()
}

type DescribeDocumentParametersInput struct {
	_ struct{} `type:"structure"`

	DocumentName *string `type:"string" required:"true"`

	DocumentVersion *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s DescribeDocumentParametersInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentParametersInput) GoString() string {
	return s.String()
}

type DescribeDocumentParametersOutput struct {
	_ struct{} `type:"structure"`

	Config *string `type:"string"`
}

// String returns the string representation
func (s DescribeDocumentParametersOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentParametersOutput) GoString() string {
	return s.String()
}

type DescribeDocumentPermissionInput struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string" required:"true"`

	PermissionType *string `type:"string" required:"true" enum:"DocumentPermissionType"`
}

// String returns the string representation
func (s DescribeDocumentPermissionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentPermissionInput) GoString() string {
	return s.String()
}

type DescribeDocumentPermissionOutput struct {
	_ struct{} `type:"structure"`

	AccountIds []*string `locationNameList:"AccountId" type:"list"`
}

// String returns the string representation
func (s DescribeDocumentPermissionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDocumentPermissionOutput) GoString() string {
	return s.String()
}

type DescribeInstanceAssociationsInput struct {
	_ struct{} `type:"structure"`

	Filters []*InstanceAssociationFilter `type:"list"`

	InstanceId *string `type:"string" required:"true"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAssociationsInput) GoString() string {
	return s.String()
}

type DescribeInstanceAssociationsOutput struct {
	_ struct{} `type:"structure"`

	Associations []*InstanceAssociation `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAssociationsOutput) GoString() string {
	return s.String()
}

type DescribeInstanceAssociationsStatusInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string" required:"true"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAssociationsStatusInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAssociationsStatusInput) GoString() string {
	return s.String()
}

type DescribeInstanceAssociationsStatusOutput struct {
	_ struct{} `type:"structure"`

	InstanceAssociationStatusInfoList []*InstanceAssociationStatusInfo `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAssociationsStatusOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceAssociationsStatusOutput) GoString() string {
	return s.String()
}

type DescribeInstanceInformationInput struct {
	_ struct{} `type:"structure"`

	// One or more filters. Use a filter to return a more specific list of instances.
	InstanceInformationFilterList []*InstanceInformationFilter `locationNameList:"InstanceInformationFilter" min:"1" type:"list"`

	// The maximum number of items to return for this call. The call also returns
	// a token that you can specify in a subsequent call to get the next set of
	// results.
	MaxResults *int64 `min:"5" type:"integer"`

	// The token for the next set of items to return. (You received this token from
	// a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceInformationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceInformationInput) GoString() string {
	return s.String()
}

type DescribeInstanceInformationOutput struct {
	_ struct{} `type:"structure"`

	// The instance information list.
	InstanceInformationList []*InstanceInformation `locationNameList:"InstanceInformation" type:"list"`

	// The token to use when requesting the next set of items. If there are no additional
	// items to return, the string is empty.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstanceInformationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceInformationOutput) GoString() string {
	return s.String()
}

type DescribeInstancePropertiesInput struct {
	_ struct{} `type:"structure"`

	InstancePropertyFilterList []*InstancePropertyFilter `locationNameList:"InstancePropertyFilter" type:"list"`

	MaxResults *int64 `min:"5" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstancePropertiesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancePropertiesInput) GoString() string {
	return s.String()
}

type DescribeInstancePropertiesOutput struct {
	_ struct{} `type:"structure"`

	InstanceProperties []*InstanceProperty `locationNameList:"InstanceProperty" type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstancePropertiesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancePropertiesOutput) GoString() string {
	return s.String()
}

// Describes an SSM document.
type DocumentDescription struct {
	_ struct{} `type:"structure"`

	// The date when the SSM document was created.
	CreatedDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// A description of the document.
	Description *string `type:"string"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	Hash *string `type:"string"`

	HashType *string `type:"string" enum:"DocumentHashType"`

	// The name of the SSM document.
	Name *string `type:"string"`

	Owner *string `type:"string"`

	// A description of the parameters for a document.
	Parameters []*DocumentParameter `locationNameList:"DocumentParameter" type:"list"`

	// The list of OS platforms compatible with this SSM document.
	PlatformTypes []*string `locationNameList:"PlatformType" type:"list"`

	// The SHA1 hash of the document, which you can use for verification purposes.
	Sha1 *string `type:"string"`

	// The status of the SSM document.
	Status *string `type:"string" enum:"DocumentStatus"`
}

// String returns the string representation
func (s DocumentDescription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentDescription) GoString() string {
	return s.String()
}

// Describes a filter.
type DocumentFilter struct {
	_ struct{} `type:"structure"`

	// The name of the filter.
	Key *string `locationName:"key" type:"string" required:"true" enum:"DocumentFilterKey"`

	// The value of the filter.
	Value *string `locationName:"value" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DocumentFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentFilter) GoString() string {
	return s.String()
}

// Describes the name of an SSM document.
type DocumentIdentifier struct {
	_ struct{} `type:"structure"`

	// The name of the SSM document.
	Name *string `type:"string"`

	Owner *string `type:"string"`

	// The operating system platform.
	PlatformTypes []*string `locationNameList:"PlatformType" type:"list"`
}

// String returns the string representation
func (s DocumentIdentifier) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentIdentifier) GoString() string {
	return s.String()
}

type DocumentParameter struct {
	_ struct{} `type:"structure"`

	// If specified, the default values for the parameters. Parameters without a
	// default value are required. Parameters with a default value are optional.
	DefaultValue *string `type:"string"`

	// A description of what the parameter does, how to use it, the default value,
	// and whether or not the parameter is optional.
	Description *string `type:"string"`

	// The name of the parameter.
	Name *string `type:"string"`

	// The type of parameter. The type can be either “String” or “StringList”.
	Type *string `type:"string" enum:"DocumentParameterType"`
}

// String returns the string representation
func (s DocumentParameter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentParameter) GoString() string {
	return s.String()
}

type DocumentVersionDescription struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s DocumentVersionDescription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentVersionDescription) GoString() string {
	return s.String()
}

type DocumentVersionInfo struct {
	_ struct{} `type:"structure"`

	CreatedDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	IsDefaultVersion *bool `type:"boolean"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s DocumentVersionInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DocumentVersionInfo) GoString() string {
	return s.String()
}

// Describes a failed association.
type FailedCreateAssociation struct {
	_ struct{} `type:"structure"`

	// The association.
	Entry *CreateAssociationBatchRequestEntry `type:"structure"`

	// The source of the failure.
	Fault *string `type:"string" enum:"Fault"`

	// A description of the failure.
	Message *string `type:"string"`
}

// String returns the string representation
func (s FailedCreateAssociation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FailedCreateAssociation) GoString() string {
	return s.String()
}

type GetAutomationActivityTypeInput struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetAutomationActivityTypeInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationActivityTypeInput) GoString() string {
	return s.String()
}

type GetAutomationActivityTypeOutput struct {
	_ struct{} `type:"structure"`

	ActivityDetail *AutomationActivity `type:"structure"`
}

// String returns the string representation
func (s GetAutomationActivityTypeOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationActivityTypeOutput) GoString() string {
	return s.String()
}

type GetAutomationDefinitionOutput struct {
	_ struct{} `type:"structure"`

	AutomationDefinition *AutomationDefinition `type:"structure"`
}

// String returns the string representation
func (s GetAutomationDefinitionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationDefinitionOutput) GoString() string {
	return s.String()
}

type GetAutomationDefinitionRequest struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string" required:"true"`

	Version *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s GetAutomationDefinitionRequest) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationDefinitionRequest) GoString() string {
	return s.String()
}

type GetAutomationDefinitionStrictOutput struct {
	_ struct{} `type:"structure"`

	AutomationDefinition *StrictAutomationDefinition `type:"structure"`
}

// String returns the string representation
func (s GetAutomationDefinitionStrictOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationDefinitionStrictOutput) GoString() string {
	return s.String()
}

type GetAutomationExecutionInput struct {
	_ struct{} `type:"structure"`

	AutomationExecutionId *string `min:"36" type:"string" required:"true"`
}

// String returns the string representation
func (s GetAutomationExecutionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationExecutionInput) GoString() string {
	return s.String()
}

type GetAutomationExecutionOutput struct {
	_ struct{} `type:"structure"`

	AutomationExecution *AutomationExecution `type:"structure"`
}

// String returns the string representation
func (s GetAutomationExecutionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutomationExecutionOutput) GoString() string {
	return s.String()
}

type GetDocumentInput struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetDocumentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDocumentInput) GoString() string {
	return s.String()
}

type GetDocumentOutput struct {
	_ struct{} `type:"structure"`

	// The contents of the SSM document.
	Content *string `min:"1" type:"string"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The name of the SSM document.
	Name *string `type:"string"`
}

// String returns the string representation
func (s GetDocumentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDocumentOutput) GoString() string {
	return s.String()
}

type GetInventoryInput struct {
	_ struct{} `type:"structure"`

	Filters []*InventoryFilter `locationNameList:"InventoryFilter" min:"1" type:"list"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`

	ResultAttributes []*string `locationNameList:"Attribute" min:"1" type:"list"`
}

// String returns the string representation
func (s GetInventoryInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInventoryInput) GoString() string {
	return s.String()
}

type GetInventoryOutput struct {
	_ struct{} `type:"structure"`

	Items []*InventoryItem `locationNameList:"Item" type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s GetInventoryOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInventoryOutput) GoString() string {
	return s.String()
}

type GetInventorySchemaInput struct {
	_ struct{} `type:"structure"`

	Filters []*InventorySchemaFilter `locationNameList:"InventorySchemaFilter" min:"1" type:"list"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s GetInventorySchemaInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInventorySchemaInput) GoString() string {
	return s.String()
}

type GetInventorySchemaOutput struct {
	_ struct{} `type:"structure"`

	NextToken *string `type:"string"`

	Schemas []*InventoryItemSchema `type:"list"`
}

// String returns the string representation
func (s GetInventorySchemaOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInventorySchemaOutput) GoString() string {
	return s.String()
}

type InstanceAssociation struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	Content *string `min:"1" type:"string"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s InstanceAssociation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceAssociation) GoString() string {
	return s.String()
}

type InstanceAssociationFilter struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string" enum:"InstanceAssociationFilterKey"`

	Values []*string `min:"1" type:"list"`
}

// String returns the string representation
func (s InstanceAssociationFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceAssociationFilter) GoString() string {
	return s.String()
}

type InstanceAssociationStatusInfo struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	ExecutionDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	InstanceId *string `type:"string"`

	Name *string `type:"string"`

	// Describes an association status.
	Status *AssociationStatus `type:"structure"`
}

// String returns the string representation
func (s InstanceAssociationStatusInfo) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceAssociationStatusInfo) GoString() string {
	return s.String()
}

type InstanceAssociationSummary struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	InstanceId *string `type:"string"`

	Name *string `type:"string"`

	ScheduleExpression *string `min:"1" type:"string"`

	Targets []*TargetEntry `min:"1" type:"list"`
}

// String returns the string representation
func (s InstanceAssociationSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceAssociationSummary) GoString() string {
	return s.String()
}

// Describes a filter for a specific list of instances.
type InstanceInformation struct {
	_ struct{} `type:"structure"`

	ActivationId *string `type:"string"`

	// The version of the SSM agent running on your instance.
	AgentVersion *string `type:"string"`

	AssociationLastExecutedOn *time.Time `type:"timestamp" timestampFormat:"unix"`

	AssociationOverview *AssociationOverview `type:"structure"`

	AssociationStatus *string `type:"string" enum:"AssociationStatusName"`

	ComputerName *string `min:"1" type:"string"`

	IPAddress *string `min:"1" type:"string"`

	IamRole *string `type:"string"`

	// The instance ID.
	InstanceId *string `type:"string"`

	// Indicates whether latest version of the SSM agent is running on your instance.
	IsLatestVersion *bool `type:"boolean"`

	// The date and time when agent last pinged SSM service.
	LastPingDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Name *string `type:"string"`

	// Connection status of the SSM agent.
	PingStatus *string `type:"string" enum:"PingStatus"`

	// The name of the operating system platform running on your instance.
	PlatformName *string `type:"string"`

	// The operating system platform type.
	PlatformType *string `type:"string" enum:"PlatformType"`

	// The version of the OS platform running on your instance.
	PlatformVersion *string `type:"string"`

	RegistrationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	ResourceType *string `type:"string" enum:"ResourceType"`
}

// String returns the string representation
func (s InstanceInformation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInformation) GoString() string {
	return s.String()
}

// Describes a filter for a specific list of instances.
type InstanceInformationFilter struct {
	_ struct{} `type:"structure"`

	// The name of the filter.
	Key *string `locationName:"key" type:"string" required:"true" enum:"InstanceInformationFilterKey"`

	// The filter values.
	ValueSet []*string `locationName:"valueSet" locationNameList:"InstanceInformationFilterValue" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s InstanceInformationFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInformationFilter) GoString() string {
	return s.String()
}

type InstanceProperty struct {
	_ struct{} `type:"structure"`

	ActivationId *string `type:"string"`

	AgentVersion *string `type:"string"`

	Architecture *string `type:"string"`

	AssociationOverview *AssociationOverview `type:"structure"`

	AssociationStatus *string `type:"string" enum:"AssociationStatusName"`

	AvailabilityZone *string `type:"string"`

	ComputerName *string `min:"1" type:"string"`

	IPAddress *string `min:"1" type:"string"`

	IamRole *string `type:"string"`

	InstanceId *string `type:"string"`

	InstanceRole *string `type:"string"`

	InstanceState *string `type:"string"`

	InstanceType *string `type:"string"`

	KeyName *string `type:"string"`

	LastPingDateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	LaunchTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Name *string `type:"string"`

	PingStatus *string `type:"string" enum:"PingStatus"`

	PlatformName *string `type:"string"`

	PlatformType *string `type:"string" enum:"PlatformType"`

	PlatformVersion *string `type:"string"`

	RegistrationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	ResourceType *string `type:"string"`
}

// String returns the string representation
func (s InstanceProperty) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceProperty) GoString() string {
	return s.String()
}

type InstancePropertyFilter struct {
	_ struct{} `type:"structure"`

	Key *string `locationName:"key" type:"string" required:"true" enum:"InstancePropertyFilterKey"`

	ValueSet []*string `locationName:"valueSet" locationNameList:"InstancePropertyFilterValue" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s InstancePropertyFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancePropertyFilter) GoString() string {
	return s.String()
}

type InventoryFilter struct {
	_ struct{} `type:"structure"`

	Key *string `min:"1" type:"string" required:"true"`

	Type *string `type:"string" enum:"InventoryQueryOperatorType"`

	Values []*string `locationNameList:"FilterValue" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s InventoryFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InventoryFilter) GoString() string {
	return s.String()
}

type InventoryItem struct {
	_ struct{} `type:"structure"`

	CaptureTime *string `type:"string" required:"true"`

	Content []map[string]*string `min:"1" type:"list"`

	ContentHash *string `type:"string"`

	SchemaVersion *string `type:"string" required:"true"`

	TypeName *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s InventoryItem) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InventoryItem) GoString() string {
	return s.String()
}

type InventoryItemSchema struct {
	_ struct{} `type:"structure"`

	Attributes []*string `locationNameList:"Attribute" min:"1" type:"list" required:"true"`

	TypeName *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s InventoryItemSchema) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InventoryItemSchema) GoString() string {
	return s.String()
}

type InventorySchemaFilter struct {
	_ struct{} `type:"structure"`

	Key *string `min:"1" type:"string" required:"true"`

	Values []*string `locationNameList:"FilterValue" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s InventorySchemaFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InventorySchemaFilter) GoString() string {
	return s.String()
}

type ListAssociationsInput struct {
	_ struct{} `type:"structure"`

	// One or more filters. Use a filter to return a more specific list of results.
	AssociationFilterList []*AssociationFilter `locationNameList:"AssociationFilter" min:"1" type:"list" required:"true"`

	// The maximum number of items to return for this call. The call also returns
	// a token that you can specify in a subsequent call to get the next set of
	// results.
	MaxResults *int64 `min:"1" type:"integer"`

	// The token for the next set of items to return. (You received this token from
	// a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssociationsInput) GoString() string {
	return s.String()
}

type ListAssociationsOutput struct {
	_ struct{} `type:"structure"`

	// The associations.
	Associations []*Association `locationNameList:"Association" type:"list"`

	// The token to use when requesting the next set of items. If there are no additional
	// items to return, the string is empty.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssociationsOutput) GoString() string {
	return s.String()
}

type ListCommandInvocationsInput struct {
	_ struct{} `type:"structure"`

	// (Optional) The invocations for a specific command ID.
	CommandId *string `min:"36" type:"string"`

	// (Optional) If set this returns the response of the command executions and
	// any command output. By default this is set to False.
	Details *bool `type:"boolean"`

	// (Optional) One or more filters. Use a filter to return a more specific list
	// of results.
	Filters []*CommandFilter `min:"1" type:"list"`

	// (Optional) The command execution details for a specific instance ID.
	InstanceId *string `type:"string"`

	// (Optional) The maximum number of items to return for this call. The call
	// also returns a token that you can specify in a subsequent call to get the
	// next set of results.
	MaxResults *int64 `min:"1" type:"integer"`

	// (Optional) The token for the next set of items to return. (You received this
	// token from a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCommandInvocationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCommandInvocationsInput) GoString() string {
	return s.String()
}

type ListCommandInvocationsOutput struct {
	_ struct{} `type:"structure"`

	// (Optional) A list of all invocations.
	CommandInvocations []*CommandInvocation `type:"list"`

	// (Optional) The token for the next set of items to return. (You received this
	// token from a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCommandInvocationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCommandInvocationsOutput) GoString() string {
	return s.String()
}

type ListCommandsInput struct {
	_ struct{} `type:"structure"`

	// (Optional) If provided, lists only the specified command.
	CommandId *string `min:"36" type:"string"`

	// (Optional) One or more filters. Use a filter to return a more specific list
	// of results.
	Filters []*CommandFilter `min:"1" type:"list"`

	// (Optional) Lists commands issued against this instance ID.
	InstanceId *string `type:"string"`

	// (Optional) The maximum number of items to return for this call. The call
	// also returns a token that you can specify in a subsequent call to get the
	// next set of results.
	MaxResults *int64 `min:"1" type:"integer"`

	// (Optional) The token for the next set of items to return. (You received this
	// token from a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCommandsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCommandsInput) GoString() string {
	return s.String()
}

type ListCommandsOutput struct {
	_ struct{} `type:"structure"`

	// (Optional) The list of commands requested by the user.
	Commands []*Command `type:"list"`

	// (Optional) The token for the next set of items to return. (You received this
	// token from a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListCommandsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCommandsOutput) GoString() string {
	return s.String()
}

type ListDocumentVersionsInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `min:"1" type:"integer"`

	Name *string `type:"string" required:"true"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListDocumentVersionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDocumentVersionsInput) GoString() string {
	return s.String()
}

type ListDocumentVersionsOutput struct {
	_ struct{} `type:"structure"`

	DocumentVersions []*DocumentVersionInfo `min:"1" type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListDocumentVersionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDocumentVersionsOutput) GoString() string {
	return s.String()
}

type ListDocumentsInput struct {
	_ struct{} `type:"structure"`

	// One or more filters. Use a filter to return a more specific list of results.
	DocumentFilterList []*DocumentFilter `locationNameList:"DocumentFilter" min:"1" type:"list"`

	// The maximum number of items to return for this call. The call also returns
	// a token that you can specify in a subsequent call to get the next set of
	// results.
	MaxResults *int64 `min:"1" type:"integer"`

	// The token for the next set of items to return. (You received this token from
	// a previous call.)
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListDocumentsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDocumentsInput) GoString() string {
	return s.String()
}

type ListDocumentsOutput struct {
	_ struct{} `type:"structure"`

	// The names of the SSM documents.
	DocumentIdentifiers []*DocumentIdentifier `locationNameList:"DocumentIdentifier" type:"list"`

	// The token to use when requesting the next set of items. If there are no additional
	// items to return, the string is empty.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListDocumentsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListDocumentsOutput) GoString() string {
	return s.String()
}

type ListInstanceAssociationsInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string" required:"true"`

	MaxResults *int64 `min:"1" type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListInstanceAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListInstanceAssociationsInput) GoString() string {
	return s.String()
}

type ListInstanceAssociationsOutput struct {
	_ struct{} `type:"structure"`

	Associations []*InstanceAssociationSummary `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListInstanceAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListInstanceAssociationsOutput) GoString() string {
	return s.String()
}

type ListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string" required:"true"`

	ResourceType *string `type:"string" required:"true" enum:"ResourceTypeForTagging"`
}

// String returns the string representation
func (s ListTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceInput) GoString() string {
	return s.String()
}

type ListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	TagList []*Tag `type:"list"`
}

// String returns the string representation
func (s ListTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceOutput) GoString() string {
	return s.String()
}

type ModifyDocumentPermissionInput struct {
	_ struct{} `type:"structure"`

	AccountIdsToAdd []*string `locationNameList:"AccountId" type:"list"`

	AccountIdsToRemove []*string `locationNameList:"AccountId" type:"list"`

	Name *string `type:"string" required:"true"`

	PermissionType *string `type:"string" required:"true" enum:"DocumentPermissionType"`
}

// String returns the string representation
func (s ModifyDocumentPermissionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDocumentPermissionInput) GoString() string {
	return s.String()
}

type ModifyDocumentPermissionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ModifyDocumentPermissionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDocumentPermissionOutput) GoString() string {
	return s.String()
}

type NotificationConfig struct {
	_ struct{} `type:"structure"`

	NotificationArn *string `type:"string"`

	NotificationEvents []*string `type:"list"`

	NotificationType *string `type:"string" enum:"NotificationType"`
}

// String returns the string representation
func (s NotificationConfig) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s NotificationConfig) GoString() string {
	return s.String()
}

type PutInventoryInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string" required:"true"`

	Items []*InventoryItem `locationNameList:"Item" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s PutInventoryInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PutInventoryInput) GoString() string {
	return s.String()
}

type PutInventoryOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s PutInventoryOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PutInventoryOutput) GoString() string {
	return s.String()
}

type RegisterManagedInstanceInput struct {
	_ struct{} `type:"structure"`

	ActivationCode *string `min:"20" type:"string" required:"true"`

	ActivationId *string `type:"string" required:"true"`

	Fingerprint *string `type:"string" required:"true"`

	PublicKey *string `min:"392" type:"string" required:"true"`

	PublicKeyType *string `type:"string" enum:"PublicKeyType"`
}

// String returns the string representation
func (s RegisterManagedInstanceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterManagedInstanceInput) GoString() string {
	return s.String()
}

type RegisterManagedInstanceOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s RegisterManagedInstanceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterManagedInstanceOutput) GoString() string {
	return s.String()
}

type RemoveTagsFromResourceInput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string" required:"true"`

	ResourceType *string `type:"string" required:"true" enum:"ResourceTypeForTagging"`

	TagKeys []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s RemoveTagsFromResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveTagsFromResourceInput) GoString() string {
	return s.String()
}

type RemoveTagsFromResourceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s RemoveTagsFromResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveTagsFromResourceOutput) GoString() string {
	return s.String()
}

type RequestManagedInstanceRoleTokenInput struct {
	_ struct{} `type:"structure"`

	Fingerprint *string `type:"string" required:"true"`
}

// String returns the string representation
func (s RequestManagedInstanceRoleTokenInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestManagedInstanceRoleTokenInput) GoString() string {
	return s.String()
}

type RequestManagedInstanceRoleTokenOutput struct {
	_ struct{} `type:"structure"`

	AccessKeyId *string `type:"string"`

	SecretAccessKey *string `type:"string"`

	SessionToken *string `type:"string"`

	TokenExpirationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	UpdateKeyPair *bool `type:"boolean"`
}

// String returns the string representation
func (s RequestManagedInstanceRoleTokenOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestManagedInstanceRoleTokenOutput) GoString() string {
	return s.String()
}

type SendCommandInput struct {
	_ struct{} `type:"structure"`

	// User-specified information about the command, such as a brief description
	// of what the command should do.
	Comment *string `type:"string"`

	DocumentHash *string `type:"string"`

	DocumentHashType *string `type:"string" enum:"DocumentHashType"`

	// Required. The name of the SSM document to execute. This can be an SSM public
	// document or a custom document.
	DocumentName *string `type:"string" required:"true"`

	// Required. The instance IDs where the command should execute.
	InstanceIds []*string `min:"1" type:"list" required:"true"`

	NotificationConfig *NotificationConfig `type:"structure"`

	// The name of the S3 bucket where command execution responses should be stored.
	OutputS3BucketName *string `min:"3" type:"string"`

	// The directory structure within the S3 bucket where the responses should be
	// stored.
	OutputS3KeyPrefix *string `type:"string"`

	// The required and optional parameters specified in the SSM document being
	// executed.
	Parameters map[string][]*string `type:"map"`

	ServiceRoleArn *string `type:"string"`

	// If this time is reached and the command has not already started executing,
	// it will not execute.
	TimeoutSeconds *int64 `min:"30" type:"integer"`
}

// String returns the string representation
func (s SendCommandInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SendCommandInput) GoString() string {
	return s.String()
}

type SendCommandOutput struct {
	_ struct{} `type:"structure"`

	// The request as it was received by SSM. Also provides the command ID which
	// can be used future references to this request.
	Command *Command `type:"structure"`
}

// String returns the string representation
func (s SendCommandOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SendCommandOutput) GoString() string {
	return s.String()
}

type StartAutomationExecutionInput struct {
	_ struct{} `type:"structure"`

	DefinitionName *string `type:"string" required:"true"`

	DefinitionVersion *int64 `min:"1" type:"integer"`

	Inputs map[string][]*string `min:"1" type:"map"`
}

// String returns the string representation
func (s StartAutomationExecutionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAutomationExecutionInput) GoString() string {
	return s.String()
}

type StartAutomationExecutionOutput struct {
	_ struct{} `type:"structure"`

	AutomationExecutionId *string `min:"36" type:"string"`
}

// String returns the string representation
func (s StartAutomationExecutionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAutomationExecutionOutput) GoString() string {
	return s.String()
}

type StopAutomationExecutionInput struct {
	_ struct{} `type:"structure"`

	AutomationExecutionId *string `min:"36" type:"string" required:"true"`
}

// String returns the string representation
func (s StopAutomationExecutionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAutomationExecutionInput) GoString() string {
	return s.String()
}

type StopAutomationExecutionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s StopAutomationExecutionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAutomationExecutionOutput) GoString() string {
	return s.String()
}

type StrictAutomationDefinition struct {
	_ struct{} `type:"structure"`

	Comment *string `type:"string"`

	CreateTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	CreatedBy *string `type:"string"`

	DefinitionContent *AutomationDefinitionDocument `type:"structure"`

	IsDefault *bool `type:"boolean"`

	LastExecuteTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	Version *int64 `min:"1" type:"integer"`
}

// String returns the string representation
func (s StrictAutomationDefinition) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StrictAutomationDefinition) GoString() string {
	return s.String()
}

type Tag struct {
	_ struct{} `type:"structure"`

	Key *string `min:"1" type:"string" required:"true"`

	Value *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s Tag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Tag) GoString() string {
	return s.String()
}

type TargetEntry struct {
	_ struct{} `type:"structure"`

	Key *string `min:"1" type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TargetEntry) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetEntry) GoString() string {
	return s.String()
}

type UpdateAssociationInput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string" required:"true"`

	Parameters map[string][]*string `type:"map"`

	ScheduleExpression *string `min:"1" type:"string"`
}

// String returns the string representation
func (s UpdateAssociationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssociationInput) GoString() string {
	return s.String()
}

type UpdateAssociationOutput struct {
	_ struct{} `type:"structure"`

	// Describes the parameters for a document.
	AssociationDescription *AssociationDescription `type:"structure"`
}

// String returns the string representation
func (s UpdateAssociationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssociationOutput) GoString() string {
	return s.String()
}

type UpdateAssociationStatusInput struct {
	_ struct{} `type:"structure"`

	AssociationId *string `type:"string"`

	// The association status.
	AssociationStatus *AssociationStatus `type:"structure" required:"true"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	// The ID of the instance.
	InstanceId *string `type:"string" required:"true"`

	// The name of the SSM document.
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateAssociationStatusInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssociationStatusInput) GoString() string {
	return s.String()
}

type UpdateAssociationStatusOutput struct {
	_ struct{} `type:"structure"`

	// Information about the association.
	AssociationDescription *AssociationDescription `type:"structure"`
}

// String returns the string representation
func (s UpdateAssociationStatusOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssociationStatusOutput) GoString() string {
	return s.String()
}

type UpdateAutomationDefinitionDefaultVersionInput struct {
	_ struct{} `type:"structure"`

	Name *string `type:"string" required:"true"`

	Version *int64 `min:"1" type:"integer" required:"true"`
}

// String returns the string representation
func (s UpdateAutomationDefinitionDefaultVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutomationDefinitionDefaultVersionInput) GoString() string {
	return s.String()
}

type UpdateAutomationDefinitionDefaultVersionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UpdateAutomationDefinitionDefaultVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutomationDefinitionDefaultVersionOutput) GoString() string {
	return s.String()
}

type UpdateDocumentDefaultVersionInput struct {
	_ struct{} `type:"structure"`

	DocumentVersion *int64 `min:"1" type:"integer" required:"true"`

	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateDocumentDefaultVersionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDocumentDefaultVersionInput) GoString() string {
	return s.String()
}

type UpdateDocumentDefaultVersionOutput struct {
	_ struct{} `type:"structure"`

	Description *DocumentVersionDescription `type:"structure"`
}

// String returns the string representation
func (s UpdateDocumentDefaultVersionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDocumentDefaultVersionOutput) GoString() string {
	return s.String()
}

type UpdateDocumentInput struct {
	_ struct{} `type:"structure"`

	Content *string `min:"1" type:"string" required:"true"`

	DocumentVersion *int64 `min:"1" type:"integer"`

	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateDocumentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDocumentInput) GoString() string {
	return s.String()
}

type UpdateDocumentOutput struct {
	_ struct{} `type:"structure"`

	// Describes an SSM document.
	DocumentDescription *DocumentDescription `type:"structure"`
}

// String returns the string representation
func (s UpdateDocumentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateDocumentOutput) GoString() string {
	return s.String()
}

type UpdateInstanceInformationInput struct {
	_ struct{} `type:"structure"`

	AgentStatus *string `min:"1" type:"string"`

	AgentVersion *string `type:"string"`

	ComputerName *string `min:"1" type:"string"`

	IPAddress *string `min:"1" type:"string"`

	InstanceId *string `type:"string" required:"true"`

	PlatformName *string `type:"string"`

	PlatformType *string `type:"string" enum:"PlatformType"`

	PlatformVersion *string `type:"string"`
}

// String returns the string representation
func (s UpdateInstanceInformationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateInstanceInformationInput) GoString() string {
	return s.String()
}

type UpdateInstanceInformationOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UpdateInstanceInformationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateInstanceInformationOutput) GoString() string {
	return s.String()
}

type UpdateManagedInstancePublicKeyInput struct {
	_ struct{} `type:"structure"`

	NewPublicKey *string `min:"392" type:"string" required:"true"`

	NewPublicKeyType *string `type:"string" required:"true" enum:"PublicKeyType"`
}

// String returns the string representation
func (s UpdateManagedInstancePublicKeyInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateManagedInstancePublicKeyInput) GoString() string {
	return s.String()
}

type UpdateManagedInstancePublicKeyOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UpdateManagedInstancePublicKeyOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateManagedInstancePublicKeyOutput) GoString() string {
	return s.String()
}

type UpdateManagedInstanceRoleInput struct {
	_ struct{} `type:"structure"`

	IamRole *string `type:"string" required:"true"`

	InstanceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateManagedInstanceRoleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateManagedInstanceRoleInput) GoString() string {
	return s.String()
}

type UpdateManagedInstanceRoleOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UpdateManagedInstanceRoleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateManagedInstanceRoleOutput) GoString() string {
	return s.String()
}

const (
	// @enum AssociationFilterKey
	AssociationFilterKeyInstanceId = "InstanceId"
	// @enum AssociationFilterKey
	AssociationFilterKeyName = "Name"
	// @enum AssociationFilterKey
	AssociationFilterKeyAssociationId = "AssociationId"
	// @enum AssociationFilterKey
	AssociationFilterKeyTargets = "Targets"
	// @enum AssociationFilterKey
	AssociationFilterKeyAssociationStatusName = "AssociationStatusName"
	// @enum AssociationFilterKey
	AssociationFilterKeyLastExecutedBefore = "LastExecutedBefore"
	// @enum AssociationFilterKey
	AssociationFilterKeyLastExecutedAfter = "LastExecutedAfter"
)

const (
	// @enum AssociationStatusName
	AssociationStatusNamePending = "Pending"
	// @enum AssociationStatusName
	AssociationStatusNameSuccess = "Success"
	// @enum AssociationStatusName
	AssociationStatusNameFailed = "Failed"
)

const (
	// @enum AutomationArgumentType
	AutomationArgumentTypeString = "STRING"
	// @enum AutomationArgumentType
	AutomationArgumentTypeStringList = "STRING_LIST"
	// @enum AutomationArgumentType
	AutomationArgumentTypeInteger = "INTEGER"
	// @enum AutomationArgumentType
	AutomationArgumentTypeBoolean = "BOOLEAN"
	// @enum AutomationArgumentType
	AutomationArgumentTypeStringMap = "STRING_MAP"
)

const (
	// @enum AutomationExecutionFilterKey
	AutomationExecutionFilterKeyDefinitionNamePrefix = "DefinitionNamePrefix"
	// @enum AutomationExecutionFilterKey
	AutomationExecutionFilterKeyExecutionStatus = "ExecutionStatus"
)

const (
	// @enum AutomationExecutionStatus
	AutomationExecutionStatusPending = "Pending"
	// @enum AutomationExecutionStatus
	AutomationExecutionStatusRunning = "Running"
	// @enum AutomationExecutionStatus
	AutomationExecutionStatusCompleted = "Completed"
	// @enum AutomationExecutionStatus
	AutomationExecutionStatusCancelled = "Cancelled"
	// @enum AutomationExecutionStatus
	AutomationExecutionStatusFailed = "Failed"
)

const (
	// @enum AutomationStepFailureResolution
	AutomationStepFailureResolutionAbort = "Abort"
	// @enum AutomationStepFailureResolution
	AutomationStepFailureResolutionContinue = "Continue"
)

const (
	// @enum CommandFilterKey
	CommandFilterKeyInvokedAfter = "InvokedAfter"
	// @enum CommandFilterKey
	CommandFilterKeyInvokedBefore = "InvokedBefore"
	// @enum CommandFilterKey
	CommandFilterKeyStatus = "Status"
	// @enum CommandFilterKey
	CommandFilterKeyCommandId = "CommandId"
	// @enum CommandFilterKey
	CommandFilterKeyInstanceId = "InstanceId"
)

const (
	// @enum CommandInvocationStatus
	CommandInvocationStatusPending = "Pending"
	// @enum CommandInvocationStatus
	CommandInvocationStatusInProgress = "InProgress"
	// @enum CommandInvocationStatus
	CommandInvocationStatusCancelling = "Cancelling"
	// @enum CommandInvocationStatus
	CommandInvocationStatusSuccess = "Success"
	// @enum CommandInvocationStatus
	CommandInvocationStatusTimedOut = "TimedOut"
	// @enum CommandInvocationStatus
	CommandInvocationStatusCancelled = "Cancelled"
	// @enum CommandInvocationStatus
	CommandInvocationStatusFailed = "Failed"
)

const (
	// @enum CommandPluginStatus
	CommandPluginStatusPending = "Pending"
	// @enum CommandPluginStatus
	CommandPluginStatusInProgress = "InProgress"
	// @enum CommandPluginStatus
	CommandPluginStatusSuccess = "Success"
	// @enum CommandPluginStatus
	CommandPluginStatusTimedOut = "TimedOut"
	// @enum CommandPluginStatus
	CommandPluginStatusCancelled = "Cancelled"
	// @enum CommandPluginStatus
	CommandPluginStatusFailed = "Failed"
)

const (
	// @enum CommandStatus
	CommandStatusPending = "Pending"
	// @enum CommandStatus
	CommandStatusInProgress = "InProgress"
	// @enum CommandStatus
	CommandStatusCancelling = "Cancelling"
	// @enum CommandStatus
	CommandStatusSuccess = "Success"
	// @enum CommandStatus
	CommandStatusTimedOut = "TimedOut"
	// @enum CommandStatus
	CommandStatusCancelled = "Cancelled"
	// @enum CommandStatus
	CommandStatusFailed = "Failed"
)

const (
	// @enum DefinitionFilterKey
	DefinitionFilterKeyPrefix = "Prefix"
)

const (
	// @enum DescribeActivationsFilterKeys
	DescribeActivationsFilterKeysActivationIds = "ActivationIds"
	// @enum DescribeActivationsFilterKeys
	DescribeActivationsFilterKeysDefaultInstanceName = "DefaultInstanceName"
	// @enum DescribeActivationsFilterKeys
	DescribeActivationsFilterKeysIamRole = "IamRole"
)

const (
	// @enum DocumentFilterKey
	DocumentFilterKeyName = "Name"
	// @enum DocumentFilterKey
	DocumentFilterKeyOwner = "Owner"
	// @enum DocumentFilterKey
	DocumentFilterKeyPlatformTypes = "PlatformTypes"
)

const (
	// @enum DocumentHashType
	DocumentHashTypeSha256 = "Sha256"
	// @enum DocumentHashType
	DocumentHashTypeSha1 = "Sha1"
)

const (
	// @enum DocumentParameterType
	DocumentParameterTypeString = "String"
	// @enum DocumentParameterType
	DocumentParameterTypeStringList = "StringList"
)

const (
	// @enum DocumentPermissionType
	DocumentPermissionTypeShare = "Share"
)

const (
	// @enum DocumentStatus
	DocumentStatusCreating = "Creating"
	// @enum DocumentStatus
	DocumentStatusActive = "Active"
	// @enum DocumentStatus
	DocumentStatusDeleting = "Deleting"
)

const (
	// @enum Fault
	FaultClient = "Client"
	// @enum Fault
	FaultServer = "Server"
	// @enum Fault
	FaultUnknown = "Unknown"
)

const (
	// @enum InstanceAssociationFilterKey
	InstanceAssociationFilterKeyAssociationId = "AssociationId"
)

const (
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyInstanceIds = "InstanceIds"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyAgentVersion = "AgentVersion"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyPingStatus = "PingStatus"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyPlatformTypes = "PlatformTypes"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyActivationIds = "ActivationIds"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyIamRole = "IamRole"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyResourceType = "ResourceType"
	// @enum InstanceInformationFilterKey
	InstanceInformationFilterKeyAssociationStatus = "AssociationStatus"
)

const (
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyInstanceIds = "InstanceIds"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyAgentVersion = "AgentVersion"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyPingStatus = "PingStatus"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyPlatformTypes = "PlatformTypes"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyDocumentName = "DocumentName"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyActivationIds = "ActivationIds"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyIamRole = "IamRole"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyResourceType = "ResourceType"
	// @enum InstancePropertyFilterKey
	InstancePropertyFilterKeyAssociationStatus = "AssociationStatus"
)

const (
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeEqual = "Equal"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeNotEqual = "NotEqual"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeBeginWith = "BeginWith"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeNotBeginWith = "NotBeginWith"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeContains = "Contains"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeLessThan = "LessThan"
	// @enum InventoryQueryOperatorType
	InventoryQueryOperatorTypeGreaterThan = "GreaterThan"
)

const (
	// @enum NotificationEvent
	NotificationEventAll = "All"
	// @enum NotificationEvent
	NotificationEventInProgress = "InProgress"
	// @enum NotificationEvent
	NotificationEventSuccess = "Success"
	// @enum NotificationEvent
	NotificationEventTimedOut = "TimedOut"
	// @enum NotificationEvent
	NotificationEventCancelled = "Cancelled"
	// @enum NotificationEvent
	NotificationEventFailed = "Failed"
)

const (
	// @enum NotificationType
	NotificationTypeCommand = "Command"
	// @enum NotificationType
	NotificationTypeInvocation = "Invocation"
)

const (
	// @enum PingStatus
	PingStatusOnline = "Online"
	// @enum PingStatus
	PingStatusConnectionLost = "ConnectionLost"
	// @enum PingStatus
	PingStatusInactive = "Inactive"
)

const (
	// @enum PlatformType
	PlatformTypeWindows = "Windows"
	// @enum PlatformType
	PlatformTypeLinux = "Linux"
)

const (
	// @enum PublicKeyType
	PublicKeyTypeRsa = "Rsa"
)

const (
	// @enum ResourceType
	ResourceTypeManagedInstance = "ManagedInstance"
	// @enum ResourceType
	ResourceTypeDocument = "Document"
	// @enum ResourceType
	ResourceTypeEc2instance = "EC2Instance"
)

const (
	// @enum ResourceTypeForTagging
	ResourceTypeForTaggingManagedInstance = "ManagedInstance"
	// @enum ResourceTypeForTagging
	ResourceTypeForTaggingDocument = "Document"
)
